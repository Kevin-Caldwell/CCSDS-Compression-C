<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="da/d45/a00011" kind="file" language="Python">
    <compoundname>test_compression.py</compoundname>
    <innerclass refid="d9/d72/a00412" prot="public">test_compression::TestComp</innerclass>
    <innernamespace refid="d8/d21/a00368">test_compression</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="d8/d21/a00368" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>unittest</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>compression<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>comp</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>scipy.io</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>sklearn.metrics<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>mean_squared_error</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>csv</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>csv_io<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ReadCSV,<sp/>SaveCSV</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="d9/d72/a00412" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/d72/a00412" kindref="compound">TestComp</ref>(unittest.TestCase):</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="preprocessor">@classmethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="d9/d72/a00412_1ac86c73ff4bb09de46d20296fcbcbd1af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/d72/a00412_1ac86c73ff4bb09de46d20296fcbcbd1af" kindref="member">setUpClass</ref>(cls):</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>n<sp/>=<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>cls.data<sp/>=<sp/>cls.load_pic()[0:n,<sp/>0:n,<sp/>0:n]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>cls.data<sp/>=<sp/>cls.load_pic()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>For<sp/>Checking<sp/>C<sp/>vs<sp/>Python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cls.<ref refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref><sp/>=<sp/>ReadCSV(</highlight><highlight class="stringliteral">&quot;data/test-images/indian_pines.csv&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="d9/d72/a00412_1a5c7e4f16622600cb52580b191565e2dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cls.<ref refid="d9/d72/a00412_1a5c7e4f16622600cb52580b191565e2dd" kindref="member">Nx</ref><sp/>=<sp/>cls.<ref refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref>.shape[0]</highlight></codeline>
<codeline lineno="20" refid="d9/d72/a00412_1ac1452fdfd6ea1c8c005ac90bbfa62011" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cls.<ref refid="d9/d72/a00412_1ac1452fdfd6ea1c8c005ac90bbfa62011" kindref="member">Ny</ref><sp/>=<sp/>cls.<ref refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref>.shape[1]</highlight></codeline>
<codeline lineno="21" refid="d9/d72/a00412_1af3ec54a0e6bc4935a13fb520b7d7df6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cls.<ref refid="d9/d72/a00412_1af3ec54a0e6bc4935a13fb520b7d7df6e" kindref="member">Nz</ref><sp/>=<sp/>cls.<ref refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref>.shape[2]</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23" refid="d9/d72/a00412_1a7e18036fb4bf81697e8f0dd2d709a888" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/d72/a00412_1a7e18036fb4bf81697e8f0dd2d709a888" kindref="member">test_CSV</ref>(self):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>z<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d9/d72/a00412_1af3ec54a0e6bc4935a13fb520b7d7df6e" kindref="member">Nz</ref>):</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>y<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d9/d72/a00412_1ac1452fdfd6ea1c8c005ac90bbfa62011" kindref="member">Ny</ref>):</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d9/d72/a00412_1a5c7e4f16622600cb52580b191565e2dd" kindref="member">Nx</ref>):</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(str(x)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,<sp/>str(y)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,<sp/>str(z)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">,<sp/>self.<ref refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref>[x,<sp/>y<sp/>,z])</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="d9/d72/a00412_1a6f8e687cf87f06f265f8345e025fd290" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/d72/a00412_1a6f8e687cf87f06f265f8345e025fd290" kindref="member">test_predictor</ref>(self):</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>python_predicted,<sp/>python_residuals<sp/>=<sp/>comp.predictor_debug(self.<ref refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SaveCSV(python_predicted,<sp/></highlight><highlight class="stringliteral">&quot;./python_predicted.csv&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SaveCSV(python_residuals,<sp/></highlight><highlight class="stringliteral">&quot;./python_residuals.csv&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_predicted<sp/>=<sp/>ReadCSV(</highlight><highlight class="stringliteral">&quot;../build/predictor.csv&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_vs_python<sp/>=<sp/>c_predicted<sp/>==<sp/>python_predicted</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SaveCSV(c_vs_python,<sp/></highlight><highlight class="stringliteral">&quot;./c_vs_python.csv&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue((c_vs_python).all())</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="d9/d72/a00412_1a9c3b7d7f89e7794b99b5d30b9e1b3c03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/d72/a00412_1a9c3b7d7f89e7794b99b5d30b9e1b3c03" kindref="member">test_unpredict</ref>(self):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapped<sp/>=<sp/>comp.predictor(self.<ref refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unpredicted<sp/>=<sp/>comp.unpredictor(mapped,<sp/>self.<ref refid="d9/d72/a00412_1a5c7e4f16622600cb52580b191565e2dd" kindref="member">Nx</ref>,<sp/>self.<ref refid="d9/d72/a00412_1ac1452fdfd6ea1c8c005ac90bbfa62011" kindref="member">Ny</ref>,<sp/>self.<ref refid="d9/d72/a00412_1af3ec54a0e6bc4935a13fb520b7d7df6e" kindref="member">Nz</ref>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue((unpredicted<sp/>==<sp/>self.<ref refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref>).all())</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="d9/d72/a00412_1a9dd048a6a37c5628aa57a9301fe0e6a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/d72/a00412_1a9dd048a6a37c5628aa57a9301fe0e6a3" kindref="member">test_inv_GPO2</ref>(self):</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>2576</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoded<sp/>=<sp/>comp.GPO2(k,<sp/>value)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoded,<sp/>i<sp/>=<sp/>comp.inv_GPO2(k,<sp/>encoded,<sp/>0)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;value&quot;,<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;len(encoded)&quot;,<sp/>len(encoded))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;encoded:&quot;,<sp/>encoded)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;decoded&quot;,<sp/>decoded)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;i&quot;,<sp/>i)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(value<sp/>==<sp/>decoded)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="d9/d72/a00412_1a12de10b081d4d2ddbb1828ecb7fbf1a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/d72/a00412_1a12de10b081d4d2ddbb1828ecb7fbf1a7" kindref="member">test_decompress</ref>(self):</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoded<sp/>=<sp/>comp.encoder(self.<ref refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoded<sp/>=<sp/>comp.decoder(encoded,<sp/>self.<ref refid="d9/d72/a00412_1a5c7e4f16622600cb52580b191565e2dd" kindref="member">Nx</ref>,<sp/>self.<ref refid="d9/d72/a00412_1ac1452fdfd6ea1c8c005ac90bbfa62011" kindref="member">Ny</ref>,<sp/>self.<ref refid="d9/d72/a00412_1af3ec54a0e6bc4935a13fb520b7d7df6e" kindref="member">Nz</ref>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue((decoded<sp/>==<sp/>self.<ref refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref>).all())</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="d9/d72/a00412_1a5d6a83596562086f4bef51e7ce7e3ff8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/d72/a00412_1a5d6a83596562086f4bef51e7ce7e3ff8" kindref="member">test_compression_algo</ref>(self):</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapped<sp/>=<sp/>comp.predictor(self.<ref refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoded<sp/>=<sp/>comp.encoder(mapped)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoded<sp/>=<sp/>comp.decoder(encoded,<sp/>self.<ref refid="d9/d72/a00412_1a5c7e4f16622600cb52580b191565e2dd" kindref="member">Nx</ref>,<sp/>self.<ref refid="d9/d72/a00412_1ac1452fdfd6ea1c8c005ac90bbfa62011" kindref="member">Ny</ref>,<sp/>self.<ref refid="d9/d72/a00412_1af3ec54a0e6bc4935a13fb520b7d7df6e" kindref="member">Nz</ref>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unpredicted<sp/>=<sp/>comp.unpredictor(decoded,<sp/>self.<ref refid="d9/d72/a00412_1a5c7e4f16622600cb52580b191565e2dd" kindref="member">Nx</ref>,<sp/>self.<ref refid="d9/d72/a00412_1ac1452fdfd6ea1c8c005ac90bbfa62011" kindref="member">Ny</ref>,<sp/>self.<ref refid="d9/d72/a00412_1af3ec54a0e6bc4935a13fb520b7d7df6e" kindref="member">Nz</ref>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue((unpredicted<sp/>==<sp/>self.<ref refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref>).all())</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="d9/d72/a00412_1a73770f9898094fc643ccdf3f6e3e6450" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/d72/a00412_1a73770f9898094fc643ccdf3f6e3e6450" kindref="member">test_rmse</ref>(self):</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapped<sp/>=<sp/>comp.predictor(self.<ref refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoded<sp/>=<sp/>comp.encoder(mapped)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoded<sp/>=<sp/>comp.decoder(encoded,<sp/>self.<ref refid="d9/d72/a00412_1a5c7e4f16622600cb52580b191565e2dd" kindref="member">Nx</ref>,<sp/>self.<ref refid="d9/d72/a00412_1ac1452fdfd6ea1c8c005ac90bbfa62011" kindref="member">Ny</ref>,<sp/>self.<ref refid="d9/d72/a00412_1af3ec54a0e6bc4935a13fb520b7d7df6e" kindref="member">Nz</ref>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unpredicted<sp/>=<sp/>comp.unpredictor(decoded,<sp/>self.<ref refid="d9/d72/a00412_1a5c7e4f16622600cb52580b191565e2dd" kindref="member">Nx</ref>,<sp/>self.<ref refid="d9/d72/a00412_1ac1452fdfd6ea1c8c005ac90bbfa62011" kindref="member">Ny</ref>,<sp/>self.<ref refid="d9/d72/a00412_1af3ec54a0e6bc4935a13fb520b7d7df6e" kindref="member">Nz</ref>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue((unpredicted<sp/>==<sp/>self.<ref refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref>).all())</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmse<sp/>=<sp/>self.<ref refid="d9/d72/a00412_1acab599e43f76a42446f7d128db6142f5" kindref="member">rmse</ref>(self.<ref refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref>,<sp/>unpredicted)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;RMSE:<sp/>&quot;</highlight><highlight class="normal">,<sp/>rmse)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(rmse<sp/>==<sp/>0.0)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="d9/d72/a00412_1a207b44f776c09bac2062fc6fe065aa9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/d72/a00412_1a207b44f776c09bac2062fc6fe065aa9d" kindref="member">test_compression_ratio</ref>(self):</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapped<sp/>=<sp/>comp.predictor(self.<ref refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoded<sp/>=<sp/>comp.encoder(mapped)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decoded<sp/>=<sp/>comp.decoder(encoded,<sp/>self.<ref refid="d9/d72/a00412_1a5c7e4f16622600cb52580b191565e2dd" kindref="member">Nx</ref>,<sp/>self.<ref refid="d9/d72/a00412_1ac1452fdfd6ea1c8c005ac90bbfa62011" kindref="member">Ny</ref>,<sp/>self.<ref refid="d9/d72/a00412_1af3ec54a0e6bc4935a13fb520b7d7df6e" kindref="member">Nz</ref>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unpredicted<sp/>=<sp/>comp.unpredictor(decoded,<sp/>self.<ref refid="d9/d72/a00412_1a5c7e4f16622600cb52580b191565e2dd" kindref="member">Nx</ref>,<sp/>self.<ref refid="d9/d72/a00412_1ac1452fdfd6ea1c8c005ac90bbfa62011" kindref="member">Ny</ref>,<sp/>self.<ref refid="d9/d72/a00412_1af3ec54a0e6bc4935a13fb520b7d7df6e" kindref="member">Nz</ref>)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmse<sp/>=<sp/>self.<ref refid="d9/d72/a00412_1acab599e43f76a42446f7d128db6142f5" kindref="member">rmse</ref>(self.<ref refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref>,<sp/>unpredicted)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ratio<sp/>=<sp/>self.<ref refid="d9/d72/a00412_1abb98cfaed1aee0349dde4e879c2ecb9e" kindref="member">compression_ratio</ref>(self.<ref refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref>,<sp/>encoded)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;RMSE:<sp/>&quot;</highlight><highlight class="normal">,<sp/>rmse)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Compression<sp/>Ratio:<sp/>&quot;</highlight><highlight class="normal">,<sp/>ratio)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue((unpredicted<sp/>==<sp/>self.<ref refid="d9/d72/a00412_1a511ae0b1c13f95e5f08f1a0dd3da3d93" kindref="member">data</ref>).all())</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(rmse<sp/>==<sp/>0.0)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(ratio<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="d9/d72/a00412_1a1a455a23bafc82e59390728276776d89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">load_pic(file_name=&quot;python/images/Indian_pines.mat&quot;,<sp/>header=&quot;indian_pines&quot;):</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>scipy.io.loadmat(file_name)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>data[header]<sp/><sp/></highlight><highlight class="comment">#<sp/>data<sp/>is<sp/>dictionary,<sp/>only<sp/>take<sp/>the<sp/>array<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>np.array(data,<sp/>dtype=np.int64)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="d9/d72/a00412_1acab599e43f76a42446f7d128db6142f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/d72/a00412_1acab599e43f76a42446f7d128db6142f5" kindref="member">rmse</ref>(self,<sp/>data,<sp/>decompressed):</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data16int<sp/>=<sp/>np.array(data,<sp/>dtype=np.uint16)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Nz<sp/>=<sp/>data16int.shape[2]</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>z<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(Nz):</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>+=<sp/>mean_squared_error(data16int[:,<sp/>:,<sp/>z],<sp/>decompressed[:,<sp/>:,<sp/>z],<sp/>squared=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rmse<sp/>=<sp/>error<sp/>/<sp/>Nz</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rmse</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="d9/d72/a00412_1abb98cfaed1aee0349dde4e879c2ecb9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/d72/a00412_1abb98cfaed1aee0349dde4e879c2ecb9e" kindref="member">compression_ratio</ref>(self,<sp/>data,<sp/>compressed):</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data.size<sp/>*<sp/>comp.D<sp/>/<sp/>len(compressed)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>unittest.main()</highlight></codeline>
    </programlisting>
    <location file="python/test_compression.py"/>
  </compounddef>
</doxygen>
