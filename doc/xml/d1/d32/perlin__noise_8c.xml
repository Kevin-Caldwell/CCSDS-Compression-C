<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="d1/d32/perlin__noise_8c" kind="file" language="C++">
    <compoundname>perlin_noise.c</compoundname>
    <includes refid="d1/d9c/perlin_8h" local="yes">testing/perlin.h</includes>
    <includes refid="d6/d51/csv-io_8h" local="yes">files/csv-io.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">time.h</includes>
    <incdepgraph>
      <node id="9">
        <label>constants/constants.h</label>
        <link refid="d2/d6f/constants_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>global_constants.h</label>
        <link refid="d5/ddb/global__constants_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>constants/load_constants.h</label>
        <link refid="d4/d3e/load__constants_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>dst/hash_table.h</label>
        <link refid="d4/ddb/hash__table_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>dst/image.h</label>
        <link refid="d5/db2/image_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>files/csv-io.h</label>
        <link refid="d6/d51/csv-io_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>files/file_IO.h</label>
        <link refid="d9/d7f/file___i_o_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>files/uhi_io.h</label>
        <link refid="d8/d60/uhi__io_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>math/math_functions.h</label>
        <link refid="d2/de2/math__functions_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>testing/perlin.h</label>
        <link refid="d1/d9c/perlin_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/perlin_noise.c</label>
        <link refid="d1/d32/perlin__noise_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>inttypes.h</label>
      </node>
      <node id="6">
        <label>math.h</label>
      </node>
      <node id="8">
        <label>stddef.h</label>
      </node>
      <node id="16">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="13">
        <label>string.h</label>
      </node>
      <node id="18">
        <label>time.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="da/d1d/structf_vector3" prot="public">fVector3</innerclass>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d1/d32/perlin__noise_8c_1ad1fe5773deff1a734c5cc1b9e03d79fa" prot="public" static="no">
        <type>struct <ref refid="da/d1d/structf_vector3" kindref="compound">fVector3</ref></type>
        <definition>typedef struct fVector3 fVector3</definition>
        <argsstring></argsstring>
        <name>fVector3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>3D floating point vector </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/perlin_noise.c" line="14" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="d1/d32/perlin__noise_8c_1a7f35c7c40a9e0e57a50fd058b064e8f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float dot</definition>
        <argsstring>(fVector3 u, fVector3 v)</argsstring>
        <name>dot</name>
        <param>
          <type><ref refid="da/d1d/structf_vector3" kindref="compound">fVector3</ref></type>
          <declname>u</declname>
        </param>
        <param>
          <type><ref refid="da/d1d/structf_vector3" kindref="compound">fVector3</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/perlin_noise.c" line="16" column="7" bodyfile="src/perlin_noise.c" bodystart="16" bodyend="19"/>
        <references refid="da/d1d/structf_vector3_1ad0da36b2558901e21e7a30f6c227a45e" compoundref="d1/d32/perlin__noise_8c" startline="13">fVector3::x</references>
        <references refid="da/d1d/structf_vector3_1aa4f0d3eebc3c443f9be81bf48561a217" compoundref="d1/d32/perlin__noise_8c" startline="13">fVector3::y</references>
        <references refid="da/d1d/structf_vector3_1af73583b1e980b0aa03f9884812e9fd4d" compoundref="d1/d32/perlin__noise_8c" startline="13">fVector3::z</references>
        <referencedby refid="d1/d32/perlin__noise_8c_1ae6783c22fc9fe3e3afd30963992e383b" compoundref="d1/d32/perlin__noise_8c" startline="21" endline="25">normalize</referencedby>
        <referencedby refid="d1/d32/perlin__noise_8c_1a26dda31c4d26a5c138a6b58cb7e50910" compoundref="d1/d32/perlin__noise_8c" startline="50" endline="73">SolvePerlin4</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d32/perlin__noise_8c_1ae6783c22fc9fe3e3afd30963992e383b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d1d/structf_vector3" kindref="compound">fVector3</ref></type>
        <definition>fVector3 normalize</definition>
        <argsstring>(fVector3 v)</argsstring>
        <name>normalize</name>
        <param>
          <type><ref refid="da/d1d/structf_vector3" kindref="compound">fVector3</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/perlin_noise.c" line="21" column="10" bodyfile="src/perlin_noise.c" bodystart="21" bodyend="25"/>
        <references refid="d1/d32/perlin__noise_8c_1a7f35c7c40a9e0e57a50fd058b064e8f6" compoundref="d1/d32/perlin__noise_8c" startline="16" endline="19">dot</references>
        <referencedby refid="d1/d32/perlin__noise_8c_1a26dda31c4d26a5c138a6b58cb7e50910" compoundref="d1/d32/perlin__noise_8c" startline="50" endline="73">SolvePerlin4</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d32/perlin__noise_8c_1a0f59de4e718c144e6bfeced85324b3ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float interpolate</definition>
        <argsstring>(float a0, float a1, float w)</argsstring>
        <name>interpolate</name>
        <param>
          <type>float</type>
          <declname>a0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/perlin_noise.c" line="27" column="7" bodyfile="src/perlin_noise.c" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="d1/d32/perlin__noise_8c_1a5641d0f9a07f405360fc111bf0e3e7d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t mapper</definition>
        <argsstring>(float val)</argsstring>
        <name>mapper</name>
        <param>
          <type>float</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/perlin_noise.c" line="32" column="10" bodyfile="src/perlin_noise.c" bodystart="32" bodyend="35"/>
        <referencedby refid="d1/d32/perlin__noise_8c_1a26dda31c4d26a5c138a6b58cb7e50910" compoundref="d1/d32/perlin__noise_8c" startline="50" endline="73">SolvePerlin4</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d32/perlin__noise_8c_1af5816cb432fe4d1eeed508abdf19a429" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="da/d1d/structf_vector3" kindref="compound">fVector3</ref></type>
        <definition>fVector3 RandomizeVector</definition>
        <argsstring>(int vector_x, int vector_y, int vector_z)</argsstring>
        <name>RandomizeVector</name>
        <param>
          <type>int</type>
          <declname>vector_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vector_y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vector_z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/perlin_noise.c" line="37" column="10" bodyfile="src/perlin_noise.c" bodystart="37" bodyend="48"/>
        <references refid="d2/de2/math__functions_8h_1ac3644f84794a8bfdacf39c4b2c2495fc" compoundref="d2/de2/math__functions_8h" startline="36">SQ</references>
        <referencedby refid="d1/d32/perlin__noise_8c_1a26dda31c4d26a5c138a6b58cb7e50910" compoundref="d1/d32/perlin__noise_8c" startline="50" endline="73">SolvePerlin4</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d32/perlin__noise_8c_1a26dda31c4d26a5c138a6b58cb7e50910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t SolvePerlin4</definition>
        <argsstring>(int x, int y, int z, int len, dim3 size)</argsstring>
        <name>SolvePerlin4</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>z</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="d3/db3/structdim3" kindref="compound">dim3</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/perlin_noise.c" line="50" column="10" bodyfile="src/perlin_noise.c" bodystart="50" bodyend="73"/>
        <references refid="d1/d32/perlin__noise_8c_1a7f35c7c40a9e0e57a50fd058b064e8f6" compoundref="d1/d32/perlin__noise_8c" startline="16" endline="19">dot</references>
        <references refid="d1/d32/perlin__noise_8c_1a5641d0f9a07f405360fc111bf0e3e7d4" compoundref="d1/d32/perlin__noise_8c" startline="32" endline="35">mapper</references>
        <references refid="d1/d32/perlin__noise_8c_1ae6783c22fc9fe3e3afd30963992e383b" compoundref="d1/d32/perlin__noise_8c" startline="21" endline="25">normalize</references>
        <references refid="d1/d32/perlin__noise_8c_1af5816cb432fe4d1eeed508abdf19a429" compoundref="d1/d32/perlin__noise_8c" startline="37" endline="48">RandomizeVector</references>
        <referencedby refid="d1/d9c/perlin_8h_1a573b5b9f4a318d5723b22ecfe2eaa87a" compoundref="d1/d32/perlin__noise_8c" startline="75" endline="101">Perlin4</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d32/perlin__noise_8c_1a573b5b9f4a318d5723b22ecfe2eaa87a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Perlin4</definition>
        <argsstring>(image *result, int cube_side)</argsstring>
        <name>Perlin4</name>
        <param>
          <type><ref refid="de/d68/structimage" kindref="compound">image</ref> *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cube_side</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/perlin_noise.c" line="75" column="6" bodyfile="src/perlin_noise.c" bodystart="75" bodyend="101"/>
        <references refid="d2/de2/math__functions_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="d2/de2/math__functions_8h" startline="17">NULL</references>
        <references refid="d5/db2/image_8h_1aefaa1253ccc17864ac32b9d685b821d4" compoundref="d3/d10/image_8c" startline="66" endline="69">SetPixel</references>
        <references refid="de/d68/structimage_1a92c57811a03d78e56a6e8592f96a41ad" compoundref="d5/db2/image_8h" startline="66">image::size</references>
        <references refid="d1/d32/perlin__noise_8c_1a26dda31c4d26a5c138a6b58cb7e50910" compoundref="d1/d32/perlin__noise_8c" startline="50" endline="73">SolvePerlin4</references>
        <references refid="d3/db3/structdim3_1a098d7fd50051a60dd6764a3b94978064" compoundref="d2/de2/math__functions_8h" startline="59">dim3::x</references>
        <references refid="d3/db3/structdim3_1a2be1654d9b9e6915687f11ac13ef2f8b" compoundref="d2/de2/math__functions_8h" startline="60">dim3::y</references>
        <references refid="d3/db3/structdim3_1a369004c0d58468e2b5a09c22d6608e1b" compoundref="d2/de2/math__functions_8h" startline="61">dim3::z</references>
        <referencedby refid="d1/d9c/perlin_8h_1a6d727efa497a4b992c90483602583515" compoundref="d1/d32/perlin__noise_8c" startline="103" endline="117">GeneratePerlinImage</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d32/perlin__noise_8c_1a6d727efa497a4b992c90483602583515" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GeneratePerlinImage</definition>
        <argsstring>(dim3 size, int index, int length)</argsstring>
        <name>GeneratePerlinImage</name>
        <param>
          <type><ref refid="d3/db3/structdim3" kindref="compound">dim3</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/perlin_noise.c" line="103" column="6" bodyfile="src/perlin_noise.c" bodystart="103" bodyend="117"/>
        <references refid="de/d68/structimage_1a53d0e0aad601020b80d8266c2d9f8462" compoundref="d5/db2/image_8h" startline="67">image::data</references>
        <references refid="d5/db2/image_8h_1a61b8047c5bba5a89979d65847e4103b1" compoundref="d3/d10/image_8c" startline="45" endline="53">InitImage</references>
        <references refid="d1/d32/perlin__noise_8c_1a573b5b9f4a318d5723b22ecfe2eaa87a" compoundref="d1/d32/perlin__noise_8c" startline="75" endline="101">Perlin4</references>
        <references refid="d6/d51/csv-io_8h_1a214fc383a5cb483508da7bb0449a9528" compoundref="df/df6/csv-io_8c" startline="31" endline="65">SaveImageAsCSV</references>
        <references refid="d3/db3/structdim3_1a098d7fd50051a60dd6764a3b94978064" compoundref="d2/de2/math__functions_8h" startline="59">dim3::x</references>
        <references refid="d3/db3/structdim3_1a2be1654d9b9e6915687f11ac13ef2f8b" compoundref="d2/de2/math__functions_8h" startline="60">dim3::y</references>
        <references refid="d3/db3/structdim3_1a369004c0d58468e2b5a09c22d6608e1b" compoundref="d2/de2/math__functions_8h" startline="61">dim3::z</references>
        <referencedby refid="d1/d6e/image__handler_8c_1a048af25ea3eb0571ab780e44e221650e" compoundref="d1/d6e/image__handler_8c" startline="8" endline="20">main</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d1/d9c/perlin_8h" kindref="compound">testing/perlin.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/d51/csv-io_8h" kindref="compound">files/csv-io.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="da/d1d/structf_vector3" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="da/d1d/structf_vector3" kindref="compound">fVector3</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13" refid="da/d1d/structf_vector3_1ad0da36b2558901e21e7a30f6c227a45e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="da/d1d/structf_vector3_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref>,<sp/><ref refid="da/d1d/structf_vector3_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref>,<sp/><ref refid="da/d1d/structf_vector3_1af73583b1e980b0aa03f9884812e9fd4d" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="14" refid="d1/d32/perlin__noise_8c_1ad1fe5773deff1a734c5cc1b9e03d79fa" refkind="member"><highlight class="normal">}<sp/><ref refid="da/d1d/structf_vector3" kindref="compound">fVector3</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="d1/d32/perlin__noise_8c_1a7f35c7c40a9e0e57a50fd058b064e8f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d1/d32/perlin__noise_8c_1a7f35c7c40a9e0e57a50fd058b064e8f6" kindref="member">dot</ref>(<ref refid="da/d1d/structf_vector3" kindref="compound">fVector3</ref><sp/>u,<sp/><ref refid="da/d1d/structf_vector3" kindref="compound">fVector3</ref><sp/>v)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>u.<ref refid="da/d1d/structf_vector3_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref><sp/>*<sp/>v.x<sp/>+<sp/>u.<ref refid="da/d1d/structf_vector3_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref><sp/>*<sp/>v.y<sp/>+<sp/>u.<ref refid="da/d1d/structf_vector3_1af73583b1e980b0aa03f9884812e9fd4d" kindref="member">z</ref><sp/>*<sp/>v.z;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="d1/d32/perlin__noise_8c_1ae6783c22fc9fe3e3afd30963992e383b" refkind="member"><highlight class="normal"><ref refid="da/d1d/structf_vector3" kindref="compound">fVector3</ref><sp/><ref refid="d1/d32/perlin__noise_8c_1ae6783c22fc9fe3e3afd30963992e383b" kindref="member">normalize</ref>(<ref refid="da/d1d/structf_vector3" kindref="compound">fVector3</ref><sp/>v)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mag<sp/>=<sp/>sqrtf(<ref refid="d1/d32/perlin__noise_8c_1a7f35c7c40a9e0e57a50fd058b064e8f6" kindref="member">dot</ref>(v,<sp/>v));</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="da/d1d/structf_vector3" kindref="compound">fVector3</ref>){v.x<sp/>/<sp/>mag,<sp/>v.y<sp/>/<sp/>mag,<sp/>v.z<sp/>/<sp/>mag};</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="d1/d32/perlin__noise_8c_1a0f59de4e718c144e6bfeced85324b3ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="d1/d32/perlin__noise_8c_1a0f59de4e718c144e6bfeced85324b3ac" kindref="member">interpolate</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a0,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a1<sp/>-<sp/>a0)<sp/>*<sp/>((w<sp/>*<sp/>(w<sp/>*<sp/>6.0<sp/>-<sp/>15.0)<sp/>+<sp/>10.0)<sp/>*<sp/>w<sp/>*<sp/>w<sp/>*<sp/>w)<sp/>+<sp/>a0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="d1/d32/perlin__noise_8c_1a5641d0f9a07f405360fc111bf0e3e7d4" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="d1/d32/perlin__noise_8c_1a5641d0f9a07f405360fc111bf0e3e7d4" kindref="member">mapper</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint16_t)(val<sp/>*<sp/>(float)(1u<sp/>&lt;&lt;<sp/>14));</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="d1/d32/perlin__noise_8c_1af5816cb432fe4d1eeed508abdf19a429" refkind="member"><highlight class="normal"><ref refid="da/d1d/structf_vector3" kindref="compound">fVector3</ref><sp/><ref refid="d1/d32/perlin__noise_8c_1af5816cb432fe4d1eeed508abdf19a429" kindref="member">RandomizeVector</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vector_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vector_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vector_z)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>srand(vector_x<sp/>+<sp/>10000);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>rand()<sp/>%<sp/>100;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>srand(vector_y<sp/>+<sp/>20000);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>rand()<sp/>%<sp/>100;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>srand(vector_z<sp/>+<sp/>30000);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>rand()<sp/>%<sp/>100;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mag<sp/>=<sp/>sqrtf(<ref refid="d2/de2/math__functions_8h_1ac3644f84794a8bfdacf39c4b2c2495fc" kindref="member">SQ</ref>(x)<sp/>+<sp/><ref refid="d2/de2/math__functions_8h_1ac3644f84794a8bfdacf39c4b2c2495fc" kindref="member">SQ</ref>(y)<sp/>+<sp/><ref refid="d2/de2/math__functions_8h_1ac3644f84794a8bfdacf39c4b2c2495fc" kindref="member">SQ</ref>(z));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="da/d1d/structf_vector3" kindref="compound">fVector3</ref>){(float)x<sp/>/<sp/>mag,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)y<sp/>/<sp/>mag,<sp/>(float)z<sp/>/<sp/>mag};</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="d1/d32/perlin__noise_8c_1a26dda31c4d26a5c138a6b58cb7e50910" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="d1/d32/perlin__noise_8c_1a26dda31c4d26a5c138a6b58cb7e50910" kindref="member">SolvePerlin4</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/><ref refid="d3/db3/structdim3" kindref="compound">dim3</ref><sp/>size)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertexX<sp/>=<sp/>x<sp/>-<sp/>x<sp/>%<sp/>len;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertexY<sp/>=<sp/>y<sp/>-<sp/>y<sp/>%<sp/>len;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertexZ<sp/>=<sp/>z<sp/>-<sp/>z<sp/>%<sp/>len;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d1d/structf_vector3" kindref="compound">fVector3</ref><sp/>offset_vector<sp/>=<sp/><ref refid="d1/d32/perlin__noise_8c_1ae6783c22fc9fe3e3afd30963992e383b" kindref="member">normalize</ref>((<ref refid="da/d1d/structf_vector3" kindref="compound">fVector3</ref>){x<sp/>%<sp/>len,<sp/>y<sp/>%<sp/>len,<sp/>z<sp/>%<sp/>len});</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>len;<sp/>i<sp/>+=<sp/>len)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;=<sp/>len;<sp/>j<sp/>+=<sp/>len)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;=<sp/>len;<sp/>k<sp/>+=<sp/>len)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d1d/structf_vector3" kindref="compound">fVector3</ref><sp/>grid_vector<sp/>=<sp/><ref refid="d1/d32/perlin__noise_8c_1af5816cb432fe4d1eeed508abdf19a429" kindref="member">RandomizeVector</ref>(vertexX<sp/>+<sp/>i<sp/>*<sp/>len,<sp/>vertexY<sp/>+<sp/>j<sp/>*<sp/>len,<sp/>vertexZ<sp/>+<sp/>k<sp/>*<sp/>len);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dot_product<sp/>=<sp/><ref refid="d1/d32/perlin__noise_8c_1a7f35c7c40a9e0e57a50fd058b064e8f6" kindref="member">dot</ref>(grid_vector,<sp/>offset_vector);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d1/d32/perlin__noise_8c_1a5641d0f9a07f405360fc111bf0e3e7d4" kindref="member">mapper</ref>(value);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="d1/d9c/perlin_8h_1a573b5b9f4a318d5723b22ecfe2eaa87a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d32/perlin__noise_8c_1a573b5b9f4a318d5723b22ecfe2eaa87a" kindref="member">Perlin4</ref>(<ref refid="de/d68/structimage" kindref="compound">image</ref><sp/>*result,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cube_side)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;PERLIN<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>srand(1);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/db3/structdim3" kindref="compound">dim3</ref><sp/>size<sp/>=<sp/>result-&gt;<ref refid="de/d68/structimage_1a92c57811a03d78e56a6e8592f96a41ad" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>start;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>end;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>time(<ref refid="d2/de2/math__functions_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>size.<ref refid="d3/db3/structdim3_1a098d7fd50051a60dd6764a3b94978064" kindref="member">x</ref>;<sp/>x++)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>size.<ref refid="d3/db3/structdim3_1a2be1654d9b9e6915687f11ac13ef2f8b" kindref="member">y</ref>;<sp/>y++)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>0;<sp/>z<sp/>&lt;<sp/>size.<ref refid="d3/db3/structdim3_1a369004c0d58468e2b5a09c22d6608e1b" kindref="member">z</ref>;<sp/>z++)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/db2/image_8h_1aefaa1253ccc17864ac32b9d685b821d4" kindref="member">SetPixel</ref>(result,<sp/>x,<sp/>y,<sp/>z,<sp/><ref refid="d1/d32/perlin__noise_8c_1a26dda31c4d26a5c138a6b58cb7e50910" kindref="member">SolvePerlin4</ref>(x,<sp/>y,<sp/>z,<sp/>cube_side,<sp/>size));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_t<sp/>time_elapsed<sp/>=<sp/>time(<ref refid="d2/de2/math__functions_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>-<sp/>start;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_t<sp/>time_left<sp/>=<sp/>time_elapsed<sp/>*<sp/>((result-&gt;<ref refid="de/d68/structimage_1a92c57811a03d78e56a6e8592f96a41ad" kindref="member">size</ref>.<ref refid="d3/db3/structdim3_1a098d7fd50051a60dd6764a3b94978064" kindref="member">x</ref><sp/>-<sp/>x<sp/>-<sp/>1)<sp/>*<sp/>result-&gt;<ref refid="de/d68/structimage_1a92c57811a03d78e56a6e8592f96a41ad" kindref="member">size</ref>.<ref refid="d3/db3/structdim3_1a2be1654d9b9e6915687f11ac13ef2f8b" kindref="member">y</ref><sp/>+<sp/>(result-&gt;<ref refid="de/d68/structimage_1a92c57811a03d78e56a6e8592f96a41ad" kindref="member">size</ref>.<ref refid="d3/db3/structdim3_1a2be1654d9b9e6915687f11ac13ef2f8b" kindref="member">y</ref><sp/>-<sp/>y<sp/>-<sp/>1))<sp/>/<sp/>(result-&gt;<ref refid="de/d68/structimage_1a92c57811a03d78e56a6e8592f96a41ad" kindref="member">size</ref>.<ref refid="d3/db3/structdim3_1a2be1654d9b9e6915687f11ac13ef2f8b" kindref="member">y</ref><sp/>*<sp/>(x<sp/>+<sp/>1)<sp/>+<sp/>(y<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\rGenerated<sp/>%d/%d<sp/>of<sp/>Image.<sp/>(%ld<sp/>seconds<sp/>Elapsed,<sp/>%ld<sp/>seconds<sp/>Left)&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(x<sp/>+<sp/>1),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)result-&gt;<ref refid="de/d68/structimage_1a92c57811a03d78e56a6e8592f96a41ad" kindref="member">size</ref>.<ref refid="d3/db3/structdim3_1a098d7fd50051a60dd6764a3b94978064" kindref="member">x</ref>,<sp/>time_elapsed,<sp/>time_left);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>time(<ref refid="d2/de2/math__functions_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n%d<sp/>seconds<sp/>for<sp/>image<sp/>prediction.\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(end<sp/>-<sp/>start));</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="d1/d9c/perlin_8h_1a6d727efa497a4b992c90483602583515" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d1/d32/perlin__noise_8c_1a6d727efa497a4b992c90483602583515" kindref="member">GeneratePerlinImage</ref>(<ref refid="d3/db3/structdim3" kindref="compound">dim3</ref><sp/>size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>filename[100];</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(filename,<sp/></highlight><highlight class="stringliteral">&quot;../data/test-images/PERLIN_%lux%lux%lu_%d.csv&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size.<ref refid="d3/db3/structdim3_1a098d7fd50051a60dd6764a3b94978064" kindref="member">x</ref>,<sp/>size.<ref refid="d3/db3/structdim3_1a2be1654d9b9e6915687f11ac13ef2f8b" kindref="member">y</ref>,<sp/>size.<ref refid="d3/db3/structdim3_1a369004c0d58468e2b5a09c22d6608e1b" kindref="member">z</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d68/structimage" kindref="compound">image</ref><sp/>*testImage;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/db2/image_8h_1a61b8047c5bba5a89979d65847e4103b1" kindref="member">InitImage</ref>(testImage,<sp/>size.<ref refid="d3/db3/structdim3_1a098d7fd50051a60dd6764a3b94978064" kindref="member">x</ref>,<sp/>size.<ref refid="d3/db3/structdim3_1a2be1654d9b9e6915687f11ac13ef2f8b" kindref="member">y</ref>,<sp/>size.<ref refid="d3/db3/structdim3_1a369004c0d58468e2b5a09c22d6608e1b" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d32/perlin__noise_8c_1a573b5b9f4a318d5723b22ecfe2eaa87a" kindref="member">Perlin4</ref>(testImage,<sp/>length);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d51/csv-io_8h_1a214fc383a5cb483508da7bb0449a9528" kindref="member">SaveImageAsCSV</ref>(testImage,<sp/>filename);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>MEMORY_SAVING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>free(testImage-&gt;<ref refid="de/d68/structimage_1a53d0e0aad601020b80d8266c2d9f8462" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>free(testImage);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/perlin_noise.c"/>
  </compounddef>
</doxygen>
