<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="d9/dd6/a00272" kind="file" language="C++">
    <compoundname>encoder_body.c</compoundname>
    <includes refid="da/dec/a00080" local="yes">encoder/body.h</includes>
    <includes local="no">time.h</includes>
    <includes refid="d2/d1f/a00083" local="yes">encoder/encoder_helper_functions.h</includes>
    <incdepgraph>
      <node id="9">
        <label>constants/constants.h</label>
        <link refid="d9/db6/a00146"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>constants/encoder_constants.h</label>
        <link refid="d5/db1/a00140"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>global_constants.h</label>
        <link refid="d2/df5/a00137"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>constants/load_constants.h</label>
        <link refid="d7/dce/a00143"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>dst/hash_table.h</label>
        <link refid="df/d6a/a00119"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>dst/image.h</label>
        <link refid="d3/d00/a00113"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>encoder/body.h</label>
        <link refid="da/dec/a00080"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>encoder/encoder_helper_functions.h</label>
        <link refid="d2/d1f/a00083"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>encoder/stream_encoder.h</label>
        <link refid="da/d2a/a00086"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>files/file_IO.h</label>
        <link refid="df/dc8/a00122"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>files/uhi_io.h</label>
        <link refid="d1/d88/a00128"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>math/math_functions.h</label>
        <link refid="d7/d9a/a00152"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/encoder_body.c</label>
        <link refid="d9/dd6/a00272"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>inttypes.h</label>
      </node>
      <node id="6">
        <label>math.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="16">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="13">
        <label>string.h</label>
      </node>
      <node id="19">
        <label>time.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="d9/dd6/a00272_1a2689c4b3931025b79053532a5f1b0a85" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int K</definition>
        <argsstring></argsstring>
        <name>K</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="da/dec/a00080" kindref="compound">body.h</ref> <simplesect kind="author"><para>Kevin Caldwell</para>
</simplesect>
Helper Functions for Encoding the body of the Compressed Image</para>
<para>Features Golomb Power-of-Two Accumulator Value Encoding the Body of the Compressed file</para>
<para>Dependencies <ref refid="d7/d9a/a00152" kindref="compound">math_functions.h</ref> <ref refid="d3/d00/a00113" kindref="compound">image.h</ref> <ref refid="d5/db1/a00140" kindref="compound">encoder_constants.h</ref> <ref refid="da/d2a/a00086" kindref="compound">stream_encoder.h</ref></para>
<para>TODO Validate Results </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/encoder_body.c" line="5" column="5" bodyfile="src/encoder_body.c" bodystart="5" bodyend="-1"/>
        <referencedby refid="d3/d00/a00785_1aed4e95d0c6d50bc3f99264337e2f9fb8" compoundref="d1/dc6/a00347" startline="40" endline="133">Decoder_DecodeBody</referencedby>
        <referencedby refid="da/dec/a00080_1a38c7868c2a8819e7abc16148811f2e0b" compoundref="d9/dd6/a00272" startline="44" endline="131">EncodeBody</referencedby>
        <referencedby refid="da/dec/a00080_1a8efd6761bcd40cdfb8e0ca4e1f39ef6b" compoundref="d9/dd6/a00272" startline="38" endline="42">InitAccumulatorValue</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d9/dd6/a00272_1a706ff4e6123594c36b0894c248a25ff7" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int U_max</definition>
        <argsstring></argsstring>
        <name>U_max</name>
        <initializer>= <ref refid="d7/d9a/a00152_1a816dcf31e408d445ca8275ad96e6eb1e" kindref="member">CLIP</ref>(<ref refid="d5/db1/a00140_1a2dd7f6568a16cd0cf58bc9f59c6c5f3c" kindref="member">UNARY_LENGTH_LIMIT</ref>, 8, 32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/encoder_body.c" line="6" column="14" bodyfile="src/encoder_body.c" bodystart="6" bodyend="-1"/>
        <referencedby refid="d3/d00/a00785_1aed4e95d0c6d50bc3f99264337e2f9fb8" compoundref="d1/dc6/a00347" startline="40" endline="133">Decoder_DecodeBody</referencedby>
        <referencedby refid="da/dec/a00080_1ad956397a2e57dfa4fe588564adef610f" compoundref="d9/dd6/a00272" startline="9" endline="36">GolombPowerTwo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d9/dd6/a00272_1a14069285fee7428b1929cb23a4b1561c" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Gamma1</definition>
        <argsstring></argsstring>
        <name>Gamma1</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/encoder_body.c" line="7" column="5" bodyfile="src/encoder_body.c" bodystart="7" bodyend="-1"/>
        <referencedby refid="d3/d00/a00785_1aed4e95d0c6d50bc3f99264337e2f9fb8" compoundref="d1/dc6/a00347" startline="40" endline="133">Decoder_DecodeBody</referencedby>
        <referencedby refid="da/dec/a00080_1a38c7868c2a8819e7abc16148811f2e0b" compoundref="d9/dd6/a00272" startline="44" endline="131">EncodeBody</referencedby>
        <referencedby refid="da/dec/a00080_1a8efd6761bcd40cdfb8e0ca4e1f39ef6b" compoundref="d9/dd6/a00272" startline="38" endline="42">InitAccumulatorValue</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="d9/dd6/a00272_1ad956397a2e57dfa4fe588564adef610f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/dc1/a00388" kindref="compound">GolombInt</ref></type>
        <definition>GolombInt GolombPowerTwo</definition>
        <argsstring>(uint16_t j, uint16_t k)</argsstring>
        <name>GolombPowerTwo</name>
        <param>
          <type>uint16_t</type>
          <declname>j</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/encoder_body.c" line="9" column="11" bodyfile="src/encoder_body.c" bodystart="9" bodyend="36"/>
        <references refid="d7/d9a/a00152_1a60b4b9f1152371307ebadc232149699c" compoundref="d7/d9a/a00152" startline="34">BPOW</references>
        <references refid="d9/db6/a00146_1abf6d0ccec2f5157184071729f129de19" compoundref="de/d25/a00290" startline="63">D</references>
        <references refid="d9/dd6/a00272_1a706ff4e6123594c36b0894c248a25ff7" compoundref="d9/dd6/a00272" startline="6">U_max</references>
        <references refid="d5/db1/a00140_1a2dd7f6568a16cd0cf58bc9f59c6c5f3c" compoundref="d5/db1/a00140" startline="85">UNARY_LENGTH_LIMIT</references>
        <referencedby refid="da/dec/a00080_1a38c7868c2a8819e7abc16148811f2e0b" compoundref="d9/dd6/a00272" startline="44" endline="131">EncodeBody</referencedby>
      </memberdef>
      <memberdef kind="function" id="d9/dd6/a00272_1a8efd6761bcd40cdfb8e0ca4e1f39ef6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int InitAccumulatorValue</definition>
        <argsstring>(uint32_t z)</argsstring>
        <name>InitAccumulatorValue</name>
        <param>
          <type>uint32_t</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/encoder_body.c" line="38" column="14" bodyfile="src/encoder_body.c" bodystart="38" bodyend="42"/>
        <references refid="d7/d9a/a00152_1a60b4b9f1152371307ebadc232149699c" compoundref="d7/d9a/a00152" startline="34">BPOW</references>
        <references refid="d9/db6/a00146_1abf6d0ccec2f5157184071729f129de19" compoundref="de/d25/a00290" startline="63">D</references>
        <references refid="d9/dd6/a00272_1a14069285fee7428b1929cb23a4b1561c" compoundref="d9/dd6/a00272" startline="7">Gamma1</references>
        <references refid="d9/dd6/a00272_1a2689c4b3931025b79053532a5f1b0a85" compoundref="d9/dd6/a00272" startline="5">K</references>
      </memberdef>
      <memberdef kind="function" id="d9/dd6/a00272_1a38c7868c2a8819e7abc16148811f2e0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int EncodeBody</definition>
        <argsstring>(image *hIMG, const char *file_name, const char *write_mode, int buffer_size)</argsstring>
        <name>EncodeBody</name>
        <param>
          <type><ref refid="d8/ddd/a00380" kindref="compound">image</ref> *</type>
          <declname>hIMG</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>write_mode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/encoder_body.c" line="44" column="5" bodyfile="src/encoder_body.c" bodystart="44" bodyend="131"/>
        <references refid="d7/d9a/a00152_1a60b4b9f1152371307ebadc232149699c" compoundref="d7/d9a/a00152" startline="34">BPOW</references>
        <references refid="da/d2a/a00086_1afbd717a2dd8bee43593e06a3919ba72a" compoundref="d6/d82/a00293" startline="38" endline="40">CloseVarIntegerStream</references>
        <references refid="d9/db6/a00146_1abf6d0ccec2f5157184071729f129de19" compoundref="de/d25/a00290" startline="63">D</references>
        <references refid="d9/dc1/a00388_1a1e43bf7d608e87228b625cca2c04d641" compoundref="da/dec/a00080" startline="45">GolombInt::data</references>
        <references refid="df/dc8/a00122_1a05d25080a4592a86386f6d0d3d48496c" compoundref="dc/d5d/a00278" startline="11" endline="16">F_OPEN</references>
        <references refid="d9/dd6/a00272_1a14069285fee7428b1929cb23a4b1561c" compoundref="d9/dd6/a00272" startline="7">Gamma1</references>
        <references refid="da/dec/a00080_1a0bbf3cd743f1631577f828fa3d85ccf7" compoundref="da/dec/a00080" startline="36">GAMMA_STAR</references>
        <references refid="d3/d00/a00113_1a78477801fe183cdf32e60df1c92b7320" compoundref="d0/d39/a00314" startline="55" endline="59">GetPixel</references>
        <references refid="d9/dd6/a00272_1ad956397a2e57dfa4fe588564adef610f" compoundref="d9/dd6/a00272" startline="9" endline="36">GolombPowerTwo</references>
        <references refid="da/d2a/a00086_1a0db4a8ab23a4af63c99d5fbfca9073eb" compoundref="d6/d82/a00293" startline="3" endline="10">InitializeVarIntStream</references>
        <references refid="d9/dd6/a00272_1a2689c4b3931025b79053532a5f1b0a85" compoundref="d9/dd6/a00272" startline="5">K</references>
        <references refid="d9/dc1/a00388_1aebb70c2aab3407a9f05334c47131a43b" compoundref="da/dec/a00080" startline="46">GolombInt::length</references>
        <references refid="d7/d9a/a00152_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="d7/d9a/a00152" startline="17">NULL</references>
        <references refid="d9/db6/a00146_1abfda77b016218238359bcc3e5c1600b0" compoundref="de/d25/a00290" startline="51">Nx</references>
        <references refid="d9/db6/a00146_1adcc9183c4659dc09e04e5ede1d79215b" compoundref="de/d25/a00290" startline="52">Ny</references>
        <references refid="d9/db6/a00146_1a7a7576e08f5980d322da5f48c7385edc" compoundref="de/d25/a00290" startline="53">Nz</references>
        <references refid="d8/ddd/a00380_1a92c57811a03d78e56a6e8592f96a41ad" compoundref="d3/d00/a00113" startline="66">image::size</references>
        <references refid="da/d2a/a00086_1a8b42309d51939ee46f5f0d348fbbcbc0" compoundref="d6/d82/a00293" startline="12" endline="36">StreamVarInteger</references>
        <references refid="df/dc8/a00122_1a588666511dde277029c4c5afc30782a6a61aa7ff70b76bff0fda378cf61d6afbc" compoundref="df/dc8/a00122" startline="26">WRITE</references>
        <references refid="d9/de6/a00404_1a098d7fd50051a60dd6764a3b94978064" compoundref="d7/d9a/a00152" startline="59">dim3::x</references>
        <references refid="d9/de6/a00404_1a2be1654d9b9e6915687f11ac13ef2f8b" compoundref="d7/d9a/a00152" startline="60">dim3::y</references>
        <references refid="d9/de6/a00404_1a369004c0d58468e2b5a09c22d6608e1b" compoundref="d7/d9a/a00152" startline="61">dim3::z</references>
        <referencedby refid="df/d03/a00062_1a29f9d24093c99f0e47133d90ea4286e6" compoundref="d3/d07/a00305" startline="84" endline="98">EncodeImage</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/dec/a00080" kindref="compound">encoder/body.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d2/d1f/a00083" kindref="compound">encoder/encoder_helper_functions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="d5/db1/a00140_1a2689c4b3931025b79053532a5f1b0a85" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d9/dd6/a00272_1a2689c4b3931025b79053532a5f1b0a85" kindref="member">K</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>CLIP(ACCUMULATOR_INITIALIZATION_CONSTANT,<sp/>0,<sp/>MIN(D-2,<sp/>14));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="d5/db1/a00140_1a706ff4e6123594c36b0894c248a25ff7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d9/dd6/a00272_1a706ff4e6123594c36b0894c248a25ff7" kindref="member">U_max</ref><sp/>=<sp/><ref refid="d7/d9a/a00152_1a816dcf31e408d445ca8275ad96e6eb1e" kindref="member">CLIP</ref>(<ref refid="d5/db1/a00140_1a2dd7f6568a16cd0cf58bc9f59c6c5f3c" kindref="member">UNARY_LENGTH_LIMIT</ref>,<sp/>8,<sp/>32);</highlight></codeline>
<codeline lineno="7" refid="d5/db1/a00140_1a14069285fee7428b1929cb23a4b1561c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d9/dd6/a00272_1a14069285fee7428b1929cb23a4b1561c" kindref="member">Gamma1</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="da/dec/a00080_1ad956397a2e57dfa4fe588564adef610f" refkind="member"><highlight class="normal"><ref refid="d9/dc1/a00388" kindref="compound">GolombInt</ref><sp/><ref refid="d9/dd6/a00272_1ad956397a2e57dfa4fe588564adef610f" kindref="member">GolombPowerTwo</ref>(uint16_t<sp/>j,<sp/>uint16_t<sp/>k)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>u;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>div<sp/>=<sp/>j<sp/>/<sp/>(<ref refid="d7/d9a/a00152_1a60b4b9f1152371307ebadc232149699c" kindref="member">BPOW</ref>(k));</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(div<sp/>&lt;<sp/><ref refid="d9/dd6/a00272_1a706ff4e6123594c36b0894c248a25ff7" kindref="member">U_max</ref>)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>&lt;&lt;=<sp/>div;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>|=<sp/>1;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>&lt;&lt;=<sp/>k;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>k)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>|=<sp/>(j<sp/>&amp;<sp/>mask);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>u<sp/>?<sp/>(div<sp/>+<sp/>1<sp/>+<sp/>k)<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>&lt;&lt;=<sp/><ref refid="d5/db1/a00140_1a2dd7f6568a16cd0cf58bc9f59c6c5f3c" kindref="member">UNARY_LENGTH_LIMIT</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>&lt;&lt;=<sp/><ref refid="d9/db6/a00146_1abf6d0ccec2f5157184071729f129de19" kindref="member">D</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>k)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>|=<sp/>j;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>k<sp/>+<sp/><ref refid="d9/db6/a00146_1abf6d0ccec2f5157184071729f129de19" kindref="member">D</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="d9/dc1/a00388" kindref="compound">GolombInt</ref>){u,<sp/>len};</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="da/dec/a00080_1a8efd6761bcd40cdfb8e0ca4e1f39ef6b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d9/dd6/a00272_1a8efd6761bcd40cdfb8e0ca4e1f39ef6b" kindref="member">InitAccumulatorValue</ref>(uint32_t<sp/>z)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k_prime<sp/>=<sp/>(<ref refid="d9/dd6/a00272_1a2689c4b3931025b79053532a5f1b0a85" kindref="member">K</ref><sp/>&lt;=<sp/>30<sp/>-<sp/><ref refid="d9/db6/a00146_1abf6d0ccec2f5157184071729f129de19" kindref="member">D</ref>)<sp/>?<sp/><ref refid="d9/dd6/a00272_1a2689c4b3931025b79053532a5f1b0a85" kindref="member">K</ref><sp/>:<sp/>(2<sp/>*<sp/><ref refid="d9/dd6/a00272_1a2689c4b3931025b79053532a5f1b0a85" kindref="member">K</ref><sp/>+<sp/><ref refid="d9/db6/a00146_1abf6d0ccec2f5157184071729f129de19" kindref="member">D</ref><sp/>-<sp/>30);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(3<sp/>*<sp/><ref refid="d7/d9a/a00152_1a60b4b9f1152371307ebadc232149699c" kindref="member">BPOW</ref>(k_prime<sp/>+<sp/>6)<sp/>-<sp/>49)<sp/>*<sp/><ref refid="d9/dd6/a00272_1a14069285fee7428b1929cb23a4b1561c" kindref="member">Gamma1</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="da/dec/a00080_1a38c7868c2a8819e7abc16148811f2e0b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d9/dd6/a00272_1a38c7868c2a8819e7abc16148811f2e0b" kindref="member">EncodeBody</ref>(<ref refid="d8/ddd/a00380" kindref="compound">image</ref><sp/>*hIMG,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*write_mode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>K_ZPRIME<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d9/dd6/a00272_1a2689c4b3931025b79053532a5f1b0a85" kindref="member">K</ref><sp/>&lt;=<sp/>30<sp/>-<sp/><ref refid="d9/db6/a00146_1abf6d0ccec2f5157184071729f129de19" kindref="member">D</ref>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_ZPRIME<sp/>=<sp/><ref refid="d9/dd6/a00272_1a2689c4b3931025b79053532a5f1b0a85" kindref="member">K</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_ZPRIME<sp/>=<sp/>2<sp/>*<sp/><ref refid="d9/dd6/a00272_1a2689c4b3931025b79053532a5f1b0a85" kindref="member">K</ref><sp/>+<sp/><ref refid="d9/db6/a00146_1abf6d0ccec2f5157184071729f129de19" kindref="member">D</ref><sp/>-<sp/>30;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/de6/a00404" kindref="compound">dim3</ref><sp/>sz<sp/>=<sp/>hIMG-&gt;<ref refid="d8/ddd/a00380_1a92c57811a03d78e56a6e8592f96a41ad" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>gamma;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>epsilon_z;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>codeword;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>k_z;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/dc8/a00122_1aaa4f66633ab727c9d841db141c3da088" kindref="member">file_t</ref><sp/>*log<sp/>=<sp/><ref refid="df/dc8/a00122_1a05d25080a4592a86386f6d0d3d48496c" kindref="member">F_OPEN</ref>(</highlight><highlight class="stringliteral">&quot;../data/logs/c-encoder-debug.LOG&quot;</highlight><highlight class="normal">,<sp/><ref refid="df/dc8/a00122_1a588666511dde277029c4c5afc30782a6a61aa7ff70b76bff0fda378cf61d6afbc" kindref="member">WRITE</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d27/a00392" kindref="compound">VIFS</ref><sp/>stream;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d2a/a00086_1a0db4a8ab23a4af63c99d5fbfca9073eb" kindref="member">InitializeVarIntStream</ref>(&amp;stream,<sp/>file_name,<sp/>buffer_size);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>start<sp/>=<sp/>time(<ref refid="d7/d9a/a00152_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>0;<sp/>z<sp/>&lt;<sp/>sz.<ref refid="d9/de6/a00404_1a369004c0d58468e2b5a09c22d6608e1b" kindref="member">z</ref>;<sp/>z++)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>sz.<ref refid="d9/de6/a00404_1a2be1654d9b9e6915687f11ac13ef2f8b" kindref="member">y</ref>;<sp/>y++)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>sz.<ref refid="d9/de6/a00404_1a098d7fd50051a60dd6764a3b94978064" kindref="member">x</ref>;<sp/>x++)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>data<sp/>=<sp/><ref refid="d3/d00/a00113_1a78477801fe183cdf32e60df1c92b7320" kindref="member">GetPixel</ref>(hIMG,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>y<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gamma<sp/>=<sp/><ref refid="d7/d9a/a00152_1a60b4b9f1152371307ebadc232149699c" kindref="member">BPOW</ref>(<ref refid="d9/dd6/a00272_1a14069285fee7428b1929cb23a4b1561c" kindref="member">Gamma1</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epsilon_z<sp/>=<sp/>((3<sp/>*<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)<ref refid="d7/d9a/a00152_1a60b4b9f1152371307ebadc232149699c" kindref="member">BPOW</ref>(K_ZPRIME<sp/>+<sp/>6)<sp/>-<sp/>49)<sp/>*<sp/>gamma)<sp/>/<sp/><ref refid="d7/d9a/a00152_1a60b4b9f1152371307ebadc232149699c" kindref="member">BPOW</ref>(7);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d2a/a00086_1a8b42309d51939ee46f5f0d348fbbcbc0" kindref="member">StreamVarInteger</ref>(&amp;stream,<sp/>data,<sp/><ref refid="d9/db6/a00146_1abf6d0ccec2f5157184071729f129de19" kindref="member">D</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/><ref refid="d9/db6/a00146_1abf6d0ccec2f5157184071729f129de19" kindref="member">D</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(log,<sp/></highlight><highlight class="stringliteral">&quot;%u:%d,%d\n&quot;</highlight><highlight class="normal">,<sp/>data,<sp/><ref refid="d9/db6/a00146_1abf6d0ccec2f5157184071729f129de19" kindref="member">D</ref>,<sp/>k_z);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(2<sp/>*<sp/>gamma<sp/>&gt;<sp/>epsilon_z<sp/>+<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)49<sp/>*<sp/>gamma)<sp/>/<sp/><ref refid="d7/d9a/a00152_1a60b4b9f1152371307ebadc232149699c" kindref="member">BPOW</ref>(7)))</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k_z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="d9/db6/a00146_1abf6d0ccec2f5157184071729f129de19" kindref="member">D</ref>;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((gamma<sp/>*<sp/><ref refid="d7/d9a/a00152_1a60b4b9f1152371307ebadc232149699c" kindref="member">BPOW</ref>(i))<sp/>&lt;=<sp/>(epsilon_z<sp/>+<sp/>((49u<sp/>*<sp/>gamma)<sp/>&gt;&gt;<sp/>7)))</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k_z<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc1/a00388" kindref="compound">GolombInt</ref><sp/>res<sp/>=<sp/><ref refid="d9/dd6/a00272_1ad956397a2e57dfa4fe588564adef610f" kindref="member">GolombPowerTwo</ref>(data,<sp/>k_z);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/>res.<ref refid="d9/dc1/a00388_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(log,<sp/></highlight><highlight class="stringliteral">&quot;(%d,<sp/>%d,<sp/>%d)<sp/>%u:%d,<sp/>%d,<sp/>%d,<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>y,<sp/>z,<sp/>res.<ref refid="d9/dc1/a00388_1a1e43bf7d608e87228b625cca2c04d641" kindref="member">data</ref>,<sp/>res.<ref refid="d9/dc1/a00388_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref>,<sp/>k_z,<sp/>gamma,<sp/>epsilon_z);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d2a/a00086_1a8b42309d51939ee46f5f0d348fbbcbc0" kindref="member">StreamVarInteger</ref>(&amp;stream,<sp/>res.<ref refid="d9/dc1/a00388_1a1e43bf7d608e87228b625cca2c04d641" kindref="member">data</ref>,<sp/>res.<ref refid="d9/dc1/a00388_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gamma<sp/>&lt;<sp/><ref refid="d7/d9a/a00152_1a60b4b9f1152371307ebadc232149699c" kindref="member">BPOW</ref>(<ref refid="da/dec/a00080_1a0bbf3cd743f1631577f828fa3d85ccf7" kindref="member">GAMMA_STAR</ref>)<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epsilon_z<sp/>+=<sp/>data;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gamma++;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gamma<sp/>==<sp/><ref refid="d7/d9a/a00152_1a60b4b9f1152371307ebadc232149699c" kindref="member">BPOW</ref>(<ref refid="da/dec/a00080_1a0bbf3cd743f1631577f828fa3d85ccf7" kindref="member">GAMMA_STAR</ref>)<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epsilon_z<sp/>=<sp/>(epsilon_z<sp/>+<sp/>data<sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gamma<sp/>=<sp/>(gamma<sp/>+<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_t<sp/>time_elapsed<sp/>=<sp/>time(<ref refid="d7/d9a/a00152_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>-<sp/>start;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_t<sp/>time_left<sp/>=<sp/>time_elapsed<sp/>*<sp/>(<ref refid="d9/db6/a00146_1a7a7576e08f5980d322da5f48c7385edc" kindref="member">Nz</ref><sp/>-<sp/>z<sp/>-<sp/>1)<sp/>/<sp/>(z<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\rEncoded<sp/>%d/%d<sp/>of<sp/>Image.<sp/>(%ld<sp/>seconds<sp/>Elapsed,<sp/>%ld<sp/>seconds<sp/>Left)&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(z<sp/>+<sp/>1),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)hIMG-&gt;<ref refid="d8/ddd/a00380_1a92c57811a03d78e56a6e8592f96a41ad" kindref="member">size</ref>.<ref refid="d9/de6/a00404_1a098d7fd50051a60dd6764a3b94978064" kindref="member">x</ref>,<sp/>time_elapsed,<sp/>time_left);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d2a/a00086_1afbd717a2dd8bee43593e06a3919ba72a" kindref="member">CloseVarIntegerStream</ref>(&amp;stream);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>end<sp/>=<sp/>time(<ref refid="d7/d9a/a00152_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n%d<sp/>seconds<sp/>for<sp/>image<sp/>Encoding.\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(end<sp/>-<sp/>start));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%ld<sp/>/<sp/>%ld<sp/>bytes=%2.f%%<sp/>Compression\n&quot;</highlight><highlight class="normal">,<sp/>len<sp/>/<sp/>8,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/><ref refid="d9/db6/a00146_1abfda77b016218238359bcc3e5c1600b0" kindref="member">Nx</ref><sp/>*<sp/><ref refid="d9/db6/a00146_1adcc9183c4659dc09e04e5ede1d79215b" kindref="member">Ny</ref><sp/>*<sp/><ref refid="d9/db6/a00146_1a7a7576e08f5980d322da5f48c7385edc" kindref="member">Nz</ref><sp/>*<sp/><ref refid="d9/db6/a00146_1abf6d0ccec2f5157184071729f129de19" kindref="member">D</ref><sp/>/<sp/>8),<sp/>(1<sp/>-<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)len<sp/>/<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/><ref refid="d9/db6/a00146_1abfda77b016218238359bcc3e5c1600b0" kindref="member">Nx</ref><sp/>*<sp/><ref refid="d9/db6/a00146_1adcc9183c4659dc09e04e5ede1d79215b" kindref="member">Ny</ref><sp/>*<sp/><ref refid="d9/db6/a00146_1a7a7576e08f5980d322da5f48c7385edc" kindref="member">Nz</ref><sp/>*<sp/><ref refid="d9/db6/a00146_1abf6d0ccec2f5157184071729f129de19" kindref="member">D</ref>)))<sp/>*<sp/>100);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/encoder_body.c"/>
  </compounddef>
</doxygen>
