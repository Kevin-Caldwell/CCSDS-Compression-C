<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="d8/dd4/test__var_int_8c" kind="file" language="C++">
    <compoundname>test_varInt.c</compoundname>
    <includes refid="d8/d0b/test__var_int_8h" local="yes">testing/test_varInt.h</includes>
    <includes refid="df/d8f/logs_8h" local="yes">files/logs.h</includes>
    <includes refid="d5/ddb/global__constants_8h" local="yes">constants/global_constants.h</includes>
    <incdepgraph>
      <node id="10">
        <label>constants/global_constants.h</label>
        <link refid="d5/ddb/global__constants_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>constants/load_constants.h</label>
        <link refid="d4/d3e/load__constants_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>dst/hash_table.h</label>
        <link refid="d4/ddb/hash__table_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>files/file_IO.h</label>
        <link refid="d9/d7f/file___i_o_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>files/logs.h</label>
        <link refid="df/d8f/logs_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>files/varIntFile_IO.h</label>
        <link refid="d5/d5e/var_int_file___i_o_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>testing/test_varInt.h</label>
        <link refid="d8/d0b/test__var_int_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/test_varInt.c</label>
        <link refid="d8/dd4/test__var_int_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>inttypes.h</label>
      </node>
      <node id="7">
        <label>stddef.h</label>
      </node>
      <node id="8">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="13">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="d8/dd4/test__var_int_8c_1a553dc49f84a0874f09d55f9e84fb31d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void printBits</definition>
        <argsstring>(size_t const size, void const *const ptr)</argsstring>
        <name>printBits</name>
        <param>
          <type>size_t const</type>
          <declname>size</declname>
        </param>
        <param>
          <type>void const *const</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/test_varInt.c" line="5" column="6" bodyfile="src/test_varInt.c" bodystart="5" bodyend="18"/>
        <referencedby refid="d8/dd4/test__var_int_8c_1a573e4df8190dae4209a0f027d77fb942" compoundref="d8/dd4/test__var_int_8c" startline="20" endline="34">print_buffer</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/dd4/test__var_int_8c_1a573e4df8190dae4209a0f027d77fb942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_buffer</definition>
        <argsstring>(VUF *f)</argsstring>
        <name>print_buffer</name>
        <param>
          <type><ref refid="d5/d5e/var_int_file___i_o_8h_1aaee745b08a71023fc4d3bde412bdc006" kindref="member">VUF</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/test_varInt.c" line="20" column="6" bodyfile="src/test_varInt.c" bodystart="20" bodyend="34"/>
        <references refid="d5/ddd/struct_var_unsigned_int_file_1a97194a18c4b1d8f274a42c431ebab9e4" compoundref="d5/d5e/var_int_file___i_o_8h" startline="37">VarUnsignedIntFile::bit_index</references>
        <references refid="d8/d81/stream__encoder_8h_1af7b7dc9a200cb1404c280bd500fd1551" compoundref="d8/d81/stream__encoder_8h" startline="18">BUFFER_LENGTH</references>
        <references refid="d5/ddd/struct_var_unsigned_int_file_1a655357dd976f916aed3eb30bc0a694d9" compoundref="d5/d5e/var_int_file___i_o_8h" startline="38">VarUnsignedIntFile::byte_index</references>
        <references refid="d8/dd4/test__var_int_8c_1a553dc49f84a0874f09d55f9e84fb31d2" compoundref="d8/dd4/test__var_int_8c" startline="5" endline="18">printBits</references>
        <references refid="d5/ddd/struct_var_unsigned_int_file_1ab4d491f08cdd6da71b95cf04059412c6" compoundref="d5/d5e/var_int_file___i_o_8h" startline="34">VarUnsignedIntFile::rw_buffer</references>
        <referencedby refid="d8/d0b/test__var_int_8h_1aaac61ccbc34855ae728a8a9d45db1105" compoundref="d8/dd4/test__var_int_8c" startline="65" endline="87">testVUF_Read</referencedby>
        <referencedby refid="d8/d0b/test__var_int_8h_1af925d49ae82dafea37f82c0d044a6308" compoundref="d8/dd4/test__var_int_8c" startline="36" endline="63">testVUF_Write</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/dd4/test__var_int_8c_1af925d49ae82dafea37f82c0d044a6308" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testVUF_Write</definition>
        <argsstring>()</argsstring>
        <name>testVUF_Write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/test_varInt.c" line="36" column="5" bodyfile="src/test_varInt.c" bodystart="36" bodyend="63"/>
        <references refid="df/d8f/logs_8h_1a61353ebf0328d8bd1f61f224305e64bb" compoundref="d7/d02/logs_8c" startline="34" endline="36">Log_add</references>
        <references refid="d8/dd4/test__var_int_8c_1a573e4df8190dae4209a0f027d77fb942" compoundref="d8/dd4/test__var_int_8c" startline="20" endline="34">print_buffer</references>
        <references refid="d5/d5e/var_int_file___i_o_8h_1a744805d2f1db68081efadb9892a297e9" compoundref="d7/db9/var_int_file___i_o_8c" startline="42" endline="71">VUF_append</references>
        <references refid="d5/d5e/var_int_file___i_o_8h_1ad54b8d6492e4c149c7f1232e3eda58be" compoundref="d7/db9/var_int_file___i_o_8c" startline="97" endline="103">VUF_close</references>
        <references refid="d5/d5e/var_int_file___i_o_8h_1a07ca21a87dab6f536b7f4d69050f5602" compoundref="d7/db9/var_int_file___i_o_8c" startline="14" endline="40">VUF_initialize</references>
        <references refid="d5/d5e/var_int_file___i_o_8h_1a65ff8d4f12985f7d5210a0688be998dca43ace450ee0d4bf5400727c62d98eccc" compoundref="d5/d5e/var_int_file___i_o_8h" startline="23">WRITE_BINARY</references>
      </memberdef>
      <memberdef kind="function" id="d8/dd4/test__var_int_8c_1aaac61ccbc34855ae728a8a9d45db1105" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testVUF_Read</definition>
        <argsstring>()</argsstring>
        <name>testVUF_Read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/test_varInt.c" line="65" column="5" bodyfile="src/test_varInt.c" bodystart="65" bodyend="87"/>
        <references refid="d8/dd4/test__var_int_8c_1a573e4df8190dae4209a0f027d77fb942" compoundref="d8/dd4/test__var_int_8c" startline="20" endline="34">print_buffer</references>
        <references refid="d5/d5e/var_int_file___i_o_8h_1a65ff8d4f12985f7d5210a0688be998dcae04a4d33d75ca7df3b250e69c2869be8" compoundref="d5/d5e/var_int_file___i_o_8h" startline="23">READ_BINARY</references>
        <references refid="d5/d5e/var_int_file___i_o_8h_1ad54b8d6492e4c149c7f1232e3eda58be" compoundref="d7/db9/var_int_file___i_o_8c" startline="97" endline="103">VUF_close</references>
        <references refid="d5/d5e/var_int_file___i_o_8h_1a07ca21a87dab6f536b7f4d69050f5602" compoundref="d7/db9/var_int_file___i_o_8c" startline="14" endline="40">VUF_initialize</references>
        <references refid="d5/d5e/var_int_file___i_o_8h_1aafa9034f88afca6a726a84673d063889" compoundref="d7/db9/var_int_file___i_o_8c" startline="73" endline="95">VUF_read_stack</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/d0b/test__var_int_8h" kindref="compound">testing/test_varInt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="df/d8f/logs_8h" kindref="compound">files/logs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d5/ddb/global__constants_8h" kindref="compound">constants/global_constants.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="d8/dd4/test__var_int_8c_1a553dc49f84a0874f09d55f9e84fb31d2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/dd4/test__var_int_8c_1a553dc49f84a0874f09d55f9e84fb31d2" kindref="member">printBits</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptr)</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*b<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>ptr;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byte;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>size-1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>7;<sp/>j<sp/>&gt;=<sp/>0;<sp/>j--)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>(b[i]<sp/>&gt;&gt;<sp/>j)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%u&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="d8/dd4/test__var_int_8c_1a573e4df8190dae4209a0f027d77fb942" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/dd4/test__var_int_8c_1a573e4df8190dae4209a0f027d77fb942" kindref="member">print_buffer</ref>(<ref refid="d5/ddd/struct_var_unsigned_int_file" kindref="compound">VUF</ref>*<sp/>f){</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="d8/d81/stream__encoder_8h_1af7b7dc9a200cb1404c280bd500fd1551" kindref="member">BUFFER_LENGTH</ref>;<sp/>i++){</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%d:\t&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/dd4/test__var_int_8c_1a553dc49f84a0874f09d55f9e84fb31d2" kindref="member">printBits</ref>(4,<sp/>f-&gt;<ref refid="d5/ddd/struct_var_unsigned_int_file_1ab4d491f08cdd6da71b95cf04059412c6" kindref="member">rw_buffer</ref><sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>%08X&quot;</highlight><highlight class="normal">,<sp/>f-&gt;<ref refid="d5/ddd/struct_var_unsigned_int_file_1ab4d491f08cdd6da71b95cf04059412c6" kindref="member">rw_buffer</ref>[i]);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for(int<sp/>i<sp/>=<sp/>BUFFER_LENGTH<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>printf(&quot;%#10x<sp/>:%d\n&quot;,<sp/>f-&gt;rw_buffer[i],<sp/>i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;BIT<sp/>INDEX:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>f-&gt;<ref refid="d5/ddd/struct_var_unsigned_int_file_1a97194a18c4b1d8f274a42c431ebab9e4" kindref="member">bit_index</ref>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;BYTE<sp/>INDEX:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>f-&gt;<ref refid="d5/ddd/struct_var_unsigned_int_file_1a655357dd976f916aed3eb30bc0a694d9" kindref="member">byte_index</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="d8/d0b/test__var_int_8h_1af925d49ae82dafea37f82c0d044a6308" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d8/dd4/test__var_int_8c_1af925d49ae82dafea37f82c0d044a6308" kindref="member">testVUF_Write</ref>()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>LOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d8f/logs_8h_1a61353ebf0328d8bd1f61f224305e64bb" kindref="member">Log_add</ref>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>VUF<sp/>File<sp/>Write&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>array[]<sp/>=<sp/>{4,<sp/>4,<sp/>1,<sp/>23,<sp/>32,<sp/>32,<sp/>32,<sp/>5,<sp/>5,<sp/>25};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/struct_var_unsigned_int_file" kindref="compound">VUF</ref><sp/>stream;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;data/test-images/test.vuf&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d5e/var_int_file___i_o_8h_1a07ca21a87dab6f536b7f4d69050f5602" kindref="member">VUF_initialize</ref>(&amp;stream,<sp/>filename,<sp/><ref refid="d5/d5e/var_int_file___i_o_8h_1a65ff8d4f12985f7d5210a0688be998dca43ace450ee0d4bf5400727c62d98eccc" kindref="member">WRITE_BINARY</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/dd4/test__var_int_8c_1a573e4df8190dae4209a0f027d77fb942" kindref="member">print_buffer</ref>(&amp;stream);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Opened<sp/>File.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bounce<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Writing<sp/>%d<sp/>Digits<sp/>of<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>array[i],<sp/>bounce);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d5e/var_int_file___i_o_8h_1a744805d2f1db68081efadb9892a297e9" kindref="member">VUF_append</ref>(&amp;stream,<sp/>bounce,<sp/>array[i]);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/dd4/test__var_int_8c_1a573e4df8190dae4209a0f027d77fb942" kindref="member">print_buffer</ref>(&amp;stream);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounce<sp/>=<sp/>bounce<sp/>?<sp/>0<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d5e/var_int_file___i_o_8h_1ad54b8d6492e4c149c7f1232e3eda58be" kindref="member">VUF_close</ref>(&amp;stream);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="d8/d0b/test__var_int_8h_1aaac61ccbc34855ae728a8a9d45db1105" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d8/dd4/test__var_int_8c_1aaac61ccbc34855ae728a8a9d45db1105" kindref="member">testVUF_Read</ref>(){</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>array[]<sp/>=<sp/>{4,<sp/>4,<sp/>1,<sp/>23,<sp/>32,<sp/>32,<sp/>32,<sp/>5,<sp/>5,<sp/>25};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/ddd/struct_var_unsigned_int_file" kindref="compound">VUF</ref><sp/>stream;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;data/test-images/test.vuf&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d5e/var_int_file___i_o_8h_1a07ca21a87dab6f536b7f4d69050f5602" kindref="member">VUF_initialize</ref>(&amp;stream,<sp/>filename,<sp/><ref refid="d5/d5e/var_int_file___i_o_8h_1a65ff8d4f12985f7d5210a0688be998dcae04a4d33d75ca7df3b250e69c2869be8" kindref="member">READ_BINARY</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/dd4/test__var_int_8c_1a573e4df8190dae4209a0f027d77fb942" kindref="member">print_buffer</ref>(&amp;stream);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Opened<sp/>File.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bounce<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;IDNEEEX<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;INDEX:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>array[i]);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>read<sp/>=<sp/><ref refid="d5/d5e/var_int_file___i_o_8h_1aafa9034f88afca6a726a84673d063889" kindref="member">VUF_read_stack</ref>(&amp;stream,<sp/>array[i]);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;POPPPED:<sp/>%08X\t%0u\n&quot;</highlight><highlight class="normal">,<sp/>read,<sp/>read);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/dd4/test__var_int_8c_1a573e4df8190dae4209a0f027d77fb942" kindref="member">print_buffer</ref>(&amp;stream);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d5e/var_int_file___i_o_8h_1ad54b8d6492e4c149c7f1232e3eda58be" kindref="member">VUF_close</ref>(&amp;stream);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/test_varInt.c"/>
  </compounddef>
</doxygen>
