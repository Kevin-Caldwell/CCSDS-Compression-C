<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="d5/d35/a00266" kind="file" language="C++">
    <compoundname>hash_table.c</compoundname>
    <includes refid="df/d6a/a00119" local="yes">dst/hash_table.h</includes>
    <incdepgraph>
      <node id="2">
        <label>dst/hash_table.h</label>
        <link refid="df/d6a/a00119"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/hash_table.c</label>
        <link refid="d5/d35/a00266"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>inttypes.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="d5/d35/a00266_1aecf492d271c7b0c50c1832371fb34c84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Hash_InitializeHashTable</definition>
        <argsstring>(HashTable **hash)</argsstring>
        <name>Hash_InitializeHashTable</name>
        <param>
          <type><ref refid="d6/db8/a00376" kindref="compound">HashTable</ref> **</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hash_table.c" line="3" column="5" bodyfile="src/hash_table.c" bodystart="3" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a0f96cedf42d4440115356ae74e627126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Hash_DeleteHashTable</definition>
        <argsstring>(HashTable *hash)</argsstring>
        <name>Hash_DeleteHashTable</name>
        <param>
          <type><ref refid="d6/db8/a00376" kindref="compound">HashTable</ref> *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hash_table.c" line="10" column="5" bodyfile="src/hash_table.c" bodystart="10" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1af0c750fb9a54f590b713d6526ed263fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Hash_AddEntry</definition>
        <argsstring>(HashTable *hash, const char *name, int32_t data)</argsstring>
        <name>Hash_AddEntry</name>
        <param>
          <type><ref refid="d6/db8/a00376" kindref="compound">HashTable</ref> *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hash_table.c" line="15" column="5" bodyfile="src/hash_table.c" bodystart="15" bodyend="24"/>
        <references refid="d6/db8/a00376_1afe6af42ae11ea67b9e6403bd99a4f99d" compoundref="df/d6a/a00119" startline="39">HashTable::data</references>
        <references refid="df/d6a/a00119_1ac5ff60f58cdc7ee42543e2812a8cae47" compoundref="df/d6a/a00119" startline="33">HASH_CAPACITY</references>
        <references refid="df/d6a/a00119_1a5145aca5cb4a65b79b24d162d6fd72eb" compoundref="df/d6a/a00119" startline="34">KEY_LENGTH</references>
        <references refid="d6/db8/a00376_1aa429745e164770f5a9545fd31ba633b1" compoundref="df/d6a/a00119" startline="38">HashTable::keys</references>
        <references refid="d6/db8/a00376_1afed088663f8704004425cdae2120b9b3" compoundref="df/d6a/a00119" startline="40">HashTable::len</references>
        <referencedby refid="d7/dce/a00143_1a5d642038360b72b886a5eb66e3efd14a" compoundref="db/d10/a00350" startline="6" endline="35">LoadConstantFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a7026562de200bd5e9813f101d9eb614b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Hash_GetIndex</definition>
        <argsstring>(HashTable *hash, const char *key)</argsstring>
        <name>Hash_GetIndex</name>
        <param>
          <type><ref refid="d6/db8/a00376" kindref="compound">HashTable</ref> *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hash_table.c" line="26" column="5" bodyfile="src/hash_table.c" bodystart="26" bodyend="37"/>
        <references refid="df/d6a/a00119_1a5145aca5cb4a65b79b24d162d6fd72eb" compoundref="df/d6a/a00119" startline="34">KEY_LENGTH</references>
        <references refid="d6/db8/a00376_1aa429745e164770f5a9545fd31ba633b1" compoundref="df/d6a/a00119" startline="38">HashTable::keys</references>
        <references refid="d6/db8/a00376_1afed088663f8704004425cdae2120b9b3" compoundref="df/d6a/a00119" startline="40">HashTable::len</references>
        <referencedby refid="df/d6a/a00119_1a27578c1b5a3ab68d8f144ed86ea72cc2" compoundref="d5/d35/a00266" startline="39" endline="42">Hash_GetValue</referencedby>
        <referencedby refid="df/d6a/a00119_1ae198aa5dfcbf0fa9e5fb885e34e08b0c" compoundref="d5/d35/a00266" startline="44" endline="48">Hash_SetValue</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1a27578c1b5a3ab68d8f144ed86ea72cc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Hash_GetValue</definition>
        <argsstring>(HashTable *hash, const char *key)</argsstring>
        <name>Hash_GetValue</name>
        <param>
          <type><ref refid="d6/db8/a00376" kindref="compound">HashTable</ref> *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hash_table.c" line="39" column="9" bodyfile="src/hash_table.c" bodystart="39" bodyend="42"/>
        <references refid="d6/db8/a00376_1afe6af42ae11ea67b9e6403bd99a4f99d" compoundref="df/d6a/a00119" startline="39">HashTable::data</references>
        <references refid="d5/d35/a00266_1a7026562de200bd5e9813f101d9eb614b" compoundref="d5/d35/a00266" startline="26" endline="37">Hash_GetIndex</references>
        <referencedby refid="d4/d3a/a00101_1a92b3b535f0c13d4ec28dab8b13713262" compoundref="da/de0/a00317" startline="55" endline="80">LocalDirectionVector</referencedby>
        <referencedby refid="d1/d09/a00077_1abab4192db36e8577c377efd110ff5efc" compoundref="dc/d50/a00332" startline="56" endline="96">PreparePredictorMetadata</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d35/a00266_1ae198aa5dfcbf0fa9e5fb885e34e08b0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Hash_SetValue</definition>
        <argsstring>(HashTable *hash, const char *key, int32_t new_data)</argsstring>
        <name>Hash_SetValue</name>
        <param>
          <type><ref refid="d6/db8/a00376" kindref="compound">HashTable</ref> *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>new_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/hash_table.c" line="44" column="5" bodyfile="src/hash_table.c" bodystart="44" bodyend="48"/>
        <references refid="d6/db8/a00376_1afe6af42ae11ea67b9e6403bd99a4f99d" compoundref="df/d6a/a00119" startline="39">HashTable::data</references>
        <references refid="d5/d35/a00266_1a7026562de200bd5e9813f101d9eb614b" compoundref="d5/d35/a00266" startline="26" endline="37">Hash_GetIndex</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="df/d6a/a00119" kindref="compound">dst/hash_table.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="df/d6a/a00119_1aecf492d271c7b0c50c1832371fb34c84" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d5/d35/a00266_1aecf492d271c7b0c50c1832371fb34c84" kindref="member">Hash_InitializeHashTable</ref>(<ref refid="d6/db8/a00376" kindref="compound">HashTable</ref><sp/>**hash){</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/>*hash<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="d6/db8/a00376" kindref="compound">HashTable</ref>));</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>(*hash)-&gt;len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="df/d6a/a00119_1a0f96cedf42d4440115356ae74e627126" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d5/d35/a00266_1a0f96cedf42d4440115356ae74e627126" kindref="member">Hash_DeleteHashTable</ref>(<ref refid="d6/db8/a00376" kindref="compound">HashTable</ref>*<sp/>hash){</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>free(hash);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="df/d6a/a00119_1af0c750fb9a54f590b713d6526ed263fc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d5/d35/a00266_1af0c750fb9a54f590b713d6526ed263fc" kindref="member">Hash_AddEntry</ref>(<ref refid="d6/db8/a00376" kindref="compound">HashTable</ref><sp/>*hash,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/>int32_t<sp/>data)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash-&gt;<ref refid="d6/db8/a00376_1afed088663f8704004425cdae2120b9b3" kindref="member">len</ref><sp/>==<sp/><ref refid="df/d6a/a00119_1ac5ff60f58cdc7ee42543e2812a8cae47" kindref="member">HASH_CAPACITY</ref>)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>hash-&gt;<ref refid="d6/db8/a00376_1afe6af42ae11ea67b9e6403bd99a4f99d" kindref="member">data</ref>[hash-&gt;<ref refid="d6/db8/a00376_1afed088663f8704004425cdae2120b9b3" kindref="member">len</ref>]<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(hash-&gt;<ref refid="d6/db8/a00376_1aa429745e164770f5a9545fd31ba633b1" kindref="member">keys</ref>[hash-&gt;<ref refid="d6/db8/a00376_1afed088663f8704004425cdae2120b9b3" kindref="member">len</ref>++],<sp/>name,<sp/><ref refid="df/d6a/a00119_1a5145aca5cb4a65b79b24d162d6fd72eb" kindref="member">KEY_LENGTH</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="df/d6a/a00119_1a7026562de200bd5e9813f101d9eb614b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d5/d35/a00266_1a7026562de200bd5e9813f101d9eb614b" kindref="member">Hash_GetIndex</ref>(<ref refid="d6/db8/a00376" kindref="compound">HashTable</ref><sp/>*hash,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>hash-&gt;<ref refid="d6/db8/a00376_1afed088663f8704004425cdae2120b9b3" kindref="member">len</ref>;<sp/>index++)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(hash-&gt;<ref refid="d6/db8/a00376_1aa429745e164770f5a9545fd31ba633b1" kindref="member">keys</ref>[index],<sp/>key,<sp/><ref refid="df/d6a/a00119_1a5145aca5cb4a65b79b24d162d6fd72eb" kindref="member">KEY_LENGTH</ref>))</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="df/d6a/a00119_1a27578c1b5a3ab68d8f144ed86ea72cc2" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="d5/d35/a00266_1a27578c1b5a3ab68d8f144ed86ea72cc2" kindref="member">Hash_GetValue</ref>(<ref refid="d6/db8/a00376" kindref="compound">HashTable</ref><sp/>*hash,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash-&gt;<ref refid="d6/db8/a00376_1afe6af42ae11ea67b9e6403bd99a4f99d" kindref="member">data</ref>[<ref refid="d5/d35/a00266_1a7026562de200bd5e9813f101d9eb614b" kindref="member">Hash_GetIndex</ref>(hash,<sp/>key)];</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="df/d6a/a00119_1ae198aa5dfcbf0fa9e5fb885e34e08b0c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d5/d35/a00266_1ae198aa5dfcbf0fa9e5fb885e34e08b0c" kindref="member">Hash_SetValue</ref>(<ref refid="d6/db8/a00376" kindref="compound">HashTable</ref><sp/>*hash,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/>int32_t<sp/>new_data)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>hash-&gt;<ref refid="d6/db8/a00376_1afe6af42ae11ea67b9e6403bd99a4f99d" kindref="member">data</ref>[<ref refid="d5/d35/a00266_1a7026562de200bd5e9813f101d9eb614b" kindref="member">Hash_GetIndex</ref>(hash,<sp/>key)]<sp/>=<sp/>new_data;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/hash_table.c"/>
  </compounddef>
</doxygen>
