.TH "perlin_image" 3 "Version 1.0" "Hyperspectral Image Compression" \" -*- nroff -*-
.ad l
.nh
.SH NAME
perlin_image
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBinterpolant\fP (t)"
.br
.ti -1c
.RI "\fBgenerate_perlin_noise_3d\fP (shape, res, tileable=(False, False, False), \fBinterpolant\fP=\fBinterpolant\fP)"
.br
.ti -1c
.RI "\fBgenerate_fractal_noise_3d\fP (shape, res, octaves=1, persistence=0\&.5, lacunarity=2, tileable=(False, False, False), \fBinterpolant\fP=\fBinterpolant\fP)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "generate_fractal_noise_3d ( shape,  res,  octaves = \fC1\fP,  persistence = \fC0\&.5\fP,  lacunarity = \fC2\fP,  tileable = \fC(False, False, False)\fP,  interpolant = \fC\fBinterpolant\fP\fP)"

.PP
.nf
Generate a 3D numpy array of fractal noise\&.

Args:
    shape: The shape of the generated array (tuple of three ints)\&.
        This must be a multiple of lacunarity**(octaves-1)*res\&.
    res: The number of periods of noise to generate along each
        axis (tuple of three ints)\&. Note shape must be a multiple of
        (lacunarity**(octaves-1)*res)\&.
    octaves: The number of octaves in the noise\&. Defaults to 1\&.
    persistence: The scaling factor between two octaves\&.
    lacunarity: The frequency factor between two octaves\&.
    tileable: If the noise should be tileable along each axis
        (tuple of three bools)\&. Defaults to (False, False, False)\&.
    interpolant: The, interpolation function, defaults to
        t*t*t*(t*(t*6 - 15) + 10)\&.

Returns:
    A numpy array of fractal noise and of shape shape generated by
    combining several octaves of perlin noise\&.

Raises:
    ValueError: If shape is not a multiple of
        (lacunarity**(octaves-1)*res)\&.

.fi
.PP
 
.PP
Definition at line \fB79\fP of file \fBperlin_image\&.py\fP\&.
.SS "generate_perlin_noise_3d ( shape,  res,  tileable = \fC(False, False, False)\fP,  interpolant = \fC\fBinterpolant\fP\fP)"

.PP
.nf
Generate a 3D numpy array of perlin noise\&.

Args:
    shape: The shape of the generated array (tuple of three ints)\&.
        This must be a multiple of res\&.
    res: The number of periods of noise to generate along each
        axis (tuple of three ints)\&. Note shape must be a multiple
        of res\&.
    tileable: If the noise should be tileable along each axis
        (tuple of three bools)\&. Defaults to (False, False, False)\&.
    interpolant: The interpolation function, defaults to
        t*t*t*(t*(t*6 - 15) + 10)\&.

Returns:
    A numpy array of shape shape with the generated noise\&.

Raises:
    ValueError: If shape is not a multiple of res\&.

.fi
.PP
 
.PP
Definition at line \fB9\fP of file \fBperlin_image\&.py\fP\&.
.SS "interpolant ( t)"

.PP
Definition at line \fB5\fP of file \fBperlin_image\&.py\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Hyperspectral Image Compression from the source code\&.
