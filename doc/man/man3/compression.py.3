.TH "python/compression.py" 3 "Version 1.0" "Hyperspectral Image Compression" \" -*- nroff -*-
.ad l
.nh
.SH NAME
python/compression.py
.SH SYNOPSIS
.br
.PP
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBcompression\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBPs\fP (z)"
.br
.ti -1c
.RI "\fBlocal_sum\fP (x, y, z, data)"
.br
.ti -1c
.RI "\fBlocal_diff_vector\fP (x, y, z, data)"
.br
.ti -1c
.RI "\fBinit_weight_vector\fP (z)"
.br
.ti -1c
.RI "\fBprediction\fP (ld_vector, weight_vector, x, y, z, data)"
.br
.ti -1c
.RI "\fBupdated_weight_vector\fP (s_tilde, weight_vector, ld_vector, x, y, z, data)"
.br
.ti -1c
.RI "\fBmapper\fP (delta, s_hat, s_tilde)"
.br
.ti -1c
.RI "\fBpredictor\fP (data)"
.br
.ti -1c
.RI "\fBpredictor_debug\fP (data)"
.br
.ti -1c
.RI "\fBGPO2\fP (k, j)"
.br
.ti -1c
.RI "\fBencoder\fP (mapped_delta)"
.br
.ti -1c
.RI "\fBincrement_xyz\fP (x, y, z, \fBNx\fP, \fBNy\fP, \fBNz\fP)"
.br
.ti -1c
.RI "\fBinv_GPO2\fP (k, encoded, i)"
.br
.ti -1c
.RI "\fBdecoder\fP (encoded, \fBNx\fP, \fBNy\fP, \fBNz\fP)"
.br
.ti -1c
.RI "\fBunmapper\fP (mapped_delta, s_hat, s_tilde)"
.br
.ti -1c
.RI "np\&.array \fBunpredictor\fP (np\&.array mapped, int \fBNx\fP, int \fBNy\fP, int \fBNz\fP)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBD\fP = 14"
.br
.ti -1c
.RI "int \fBS_MIN\fP = 0"
.br
.ti -1c
.RI "int \fBS_MAX\fP = 2**(\fBD\fP) \- 1"
.br
.ti -1c
.RI "int \fBS_MID\fP = 2**(\fBD\fP \- 1)"
.br
.ti -1c
.RI "int \fBP\fP = 3"
.br
.ti -1c
.RI "int \fBW_RES\fP = 19"
.br
.ti -1c
.RI "\fBW_MIN\fP = \-(2**(\fBW_RES\fP + 2))"
.br
.ti -1c
.RI "int \fBW_MAX\fP = 2**(\fBW_RES\fP + 2) \- 1"
.br
.ti -1c
.RI "int \fBR\fP = 35"
.br
.ti -1c
.RI "int \fBM\fP = 0"
.br
.ti -1c
.RI "int \fBV_MIN\fP = \-6"
.br
.ti -1c
.RI "int \fBV_MAX\fP = 9"
.br
.ti -1c
.RI "int \fBT_INC\fP = 2**4"
.br
.ti -1c
.RI "int \fBU_MAX\fP = 8"
.br
.ti -1c
.RI "int \fBGAMMA_0\fP = 1"
.br
.ti -1c
.RI "int \fBK\fP = 0"
.br
.ti -1c
.RI "int \fBGAMMA_STAR\fP = 5"
.br
.ti -1c
.RI "int \fBK_ZPRIME\fP = \fBK\fP"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for Hyperspectral Image Compression from the source code\&.
