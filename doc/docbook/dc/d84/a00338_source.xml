<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_a00338_source" xml:lang="en-US">
<title>varIntFile_IO.c</title>
<indexterm><primary>src/varIntFile_IO.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_a00338_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_a00131">files/varIntFile_IO.h</link>&quot;</emphasis>
<anchor xml:id="_a00338_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_a00134">files/logs.h</link>&quot;</emphasis>
<anchor xml:id="_a00338_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_a00137">constants/global_constants.h</link>&quot;</emphasis>
<anchor xml:id="_a00338_source_1l00004"/>00004 
<anchor xml:id="_a00338_source_1l00005"/><link linkend="_a00338_1adcef86e6a920a4f9ff207599aa37b7f6">00005</link> <emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_a00338_1adcef86e6a920a4f9ff207599aa37b7f6">file_modes_arguments</link>[]&#32;=&#32;{<emphasis role="stringliteral">&quot;rb&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;wb&quot;</emphasis>};
<anchor xml:id="_a00338_source_1l00006"/>00006 
<anchor xml:id="_a00338_source_1l00007"/><link linkend="_a00338_1ab232dbf9e1e9abf226e94b02fe510da4">00007</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_a00338_1ab232dbf9e1e9abf226e94b02fe510da4">_VUF_Clean</link>(<link linkend="_a00400">VUF</link>*&#32;stream,&#32;<emphasis role="keywordtype">char</emphasis>&#32;full){
<anchor xml:id="_a00338_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;start&#32;=&#32;!full;
<anchor xml:id="_a00338_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(start;&#32;start&#32;&lt;&#32;<link linkend="_a00086_1af7b7dc9a200cb1404c280bd500fd1551">BUFFER_LENGTH</link>;&#32;start++){
<anchor xml:id="_a00338_source_1l00010"/>00010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1ab4d491f08cdd6da71b95cf04059412c6">rw_buffer</link>[start]&#32;=&#32;0;
<anchor xml:id="_a00338_source_1l00011"/>00011 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00338_source_1l00012"/>00012 }
<anchor xml:id="_a00338_source_1l00013"/>00013 
<anchor xml:id="_a00338_source_1l00014"/><link linkend="_a00131_1a07ca21a87dab6f536b7f4d69050f5602">00014</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_a00338_1a07ca21a87dab6f536b7f4d69050f5602">VUF_initialize</link>(<link linkend="_a00400">VUF</link>*&#32;stream,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;file_name,&#32;<link linkend="_a00131_1a65ff8d4f12985f7d5210a0688be998dc">file_modes</link>&#32;io_mode){
<anchor xml:id="_a00338_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;File&#32;IO&#32;Constants</emphasis>
<anchor xml:id="_a00338_source_1l00016"/>00016 &#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1aec46119c1ac94a666f08c86543006ed0">io_mode</link>&#32;=&#32;io_mode;
<anchor xml:id="_a00338_source_1l00017"/>00017 &#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1ab10afab4dbcbfc99227c63ee0ae694ff">fs</link>&#32;=&#32;<link linkend="_a00122_1a05d25080a4592a86386f6d0d3d48496c">F_OPEN</link>(file_name,&#32;io_mode);
<anchor xml:id="_a00338_source_1l00018"/>00018 
<anchor xml:id="_a00338_source_1l00019"/>00019 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;LOG</emphasis>
<anchor xml:id="_a00338_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!stream-&gt;<link linkend="_a00400_1ab10afab4dbcbfc99227c63ee0ae694ff">fs</link>){
<anchor xml:id="_a00338_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00134_1ad795690a809192117add6898be812267">Log_error</link>(<emphasis role="stringliteral">&quot;Unable&#32;to&#32;open&#32;File&quot;</emphasis>);
<anchor xml:id="_a00338_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_a00137_1a938a8c46255e5666f6a434ca0eb87f25a9e112f3803cd55fe35ba531532741d5f">FILE_ACCESS_ERROR</link>;
<anchor xml:id="_a00338_source_1l00023"/>00023 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00338_source_1l00024"/>00024 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_a00338_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="comment">//printf(&quot;stream&#32;opening:&#32;%x,&#32;%d,&#32;%s.\n&quot;,&#32;(unsigned&#32;int)&#32;stream-&gt;fs,&#32;(unsigned)&#32;stream-&gt;io_mode,&#32;file_modes_arguments[stream-&gt;io_mode]);</emphasis>
<anchor xml:id="_a00338_source_1l00026"/>00026 
<anchor xml:id="_a00338_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(io_mode&#32;==&#32;<link linkend="_a00131_1a65ff8d4f12985f7d5210a0688be998dca43ace450ee0d4bf5400727c62d98eccc">WRITE_BINARY</link>){
<anchor xml:id="_a00338_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;Empty&#32;Buffer&#32;for&#32;write&#32;requests</emphasis>
<anchor xml:id="_a00338_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1a97194a18c4b1d8f274a42c431ebab9e4">bit_index</link>&#32;=&#32;0;
<anchor xml:id="_a00338_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1a655357dd976f916aed3eb30bc0a694d9">byte_index</link>&#32;=&#32;0;
<anchor xml:id="_a00338_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00338_1ab232dbf9e1e9abf226e94b02fe510da4">_VUF_Clean</link>(stream,&#32;1);
<anchor xml:id="_a00338_source_1l00032"/>00032 &#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(io_mode&#32;==&#32;<link linkend="_a00131_1a65ff8d4f12985f7d5210a0688be998dcae04a4d33d75ca7df3b250e69c2869be8">READ_BINARY</link>)&#32;{
<anchor xml:id="_a00338_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialize&#32;Full&#32;Buffer&#32;for&#32;faster&#32;read&#32;requests</emphasis>
<anchor xml:id="_a00338_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00122_1a6d14febd2771048b4a06dd86ea17718d">F_READ</link>(stream-&gt;<link linkend="_a00400_1ab4d491f08cdd6da71b95cf04059412c6">rw_buffer</link>,&#32;<link linkend="_a00131_1a6b20d41d6252e9871430c242cb1a56e7">BUFFER_SIZE</link>,&#32;<link linkend="_a00086_1af7b7dc9a200cb1404c280bd500fd1551">BUFFER_LENGTH</link>,&#32;stream-&gt;<link linkend="_a00400_1ab10afab4dbcbfc99227c63ee0ae694ff">fs</link>);
<anchor xml:id="_a00338_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1a97194a18c4b1d8f274a42c431ebab9e4">bit_index</link>&#32;=&#32;0;
<anchor xml:id="_a00338_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1a655357dd976f916aed3eb30bc0a694d9">byte_index</link>&#32;=&#32;0;
<anchor xml:id="_a00338_source_1l00037"/>00037 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00338_source_1l00038"/>00038 
<anchor xml:id="_a00338_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_a00137_1a938a8c46255e5666f6a434ca0eb87f25a2ea4b6ef3fffc17dd1d38ab5c2837737">RES_OK</link>;
<anchor xml:id="_a00338_source_1l00040"/>00040 }
<anchor xml:id="_a00338_source_1l00041"/>00041 
<anchor xml:id="_a00338_source_1l00042"/><link linkend="_a00131_1a744805d2f1db68081efadb9892a297e9">00042</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_a00338_1a744805d2f1db68081efadb9892a297e9">VUF_append</link>(<link linkend="_a00400">VUF</link>*&#32;stream,&#32;uint32_t&#32;data,&#32;uint32_t&#32;length){
<anchor xml:id="_a00338_source_1l00043"/>00043 &#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1a97194a18c4b1d8f274a42c431ebab9e4">bit_index</link>&#32;+=&#32;length;&#32;<emphasis role="comment">//&#32;Shift&#32;Bit&#32;Pointer</emphasis>
<anchor xml:id="_a00338_source_1l00044"/>00044 &#32;&#32;&#32;&#32;uint32_t&#32;clean&#32;=&#32;(data&#32;
<anchor xml:id="_a00338_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;(<link linkend="_a00131_1a6b20d41d6252e9871430c242cb1a56e7">BUFFER_SIZE</link>&#32;-&#32;length))
<anchor xml:id="_a00338_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;&gt;&#32;(<link linkend="_a00131_1a6b20d41d6252e9871430c242cb1a56e7">BUFFER_SIZE</link>&#32;-&#32;length);
<anchor xml:id="_a00338_source_1l00047"/>00047 
<anchor xml:id="_a00338_source_1l00048"/>00048 &#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1ab4d491f08cdd6da71b95cf04059412c6">rw_buffer</link>[stream-&gt;<link linkend="_a00400_1a655357dd976f916aed3eb30bc0a694d9">byte_index</link>]&#32;|=&#32;
<anchor xml:id="_a00338_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00086_1abc23dc7967a47b4db3efff8237ef3a2f">L_SHIFT</link>(clean,&#32;<link linkend="_a00131_1a6b20d41d6252e9871430c242cb1a56e7">BUFFER_SIZE</link>&#32;-&#32;stream-&gt;<link linkend="_a00400_1a97194a18c4b1d8f274a42c431ebab9e4">bit_index</link>);
<anchor xml:id="_a00338_source_1l00050"/>00050 
<anchor xml:id="_a00338_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Variable&#32;Bit&#32;Encoding&#32;&#32;&#32;&#32;</emphasis>
<anchor xml:id="_a00338_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((stream-&gt;<link linkend="_a00400_1a97194a18c4b1d8f274a42c431ebab9e4">bit_index</link>&#32;&gt;=&#32;<link linkend="_a00131_1a6b20d41d6252e9871430c242cb1a56e7">BUFFER_SIZE</link>)){
<anchor xml:id="_a00338_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint32_t&#32;shift_index&#32;=&#32;2&#32;*&#32;<link linkend="_a00131_1a6b20d41d6252e9871430c242cb1a56e7">BUFFER_SIZE</link>&#32;-&#32;stream-&gt;<link linkend="_a00400_1a97194a18c4b1d8f274a42c431ebab9e4">bit_index</link>;
<anchor xml:id="_a00338_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1ab4d491f08cdd6da71b95cf04059412c6">rw_buffer</link>[++stream-&gt;<link linkend="_a00400_1a655357dd976f916aed3eb30bc0a694d9">byte_index</link>]&#32;|=&#32;<link linkend="_a00086_1abc23dc7967a47b4db3efff8237ef3a2f">L_SHIFT</link>(data,&#32;shift_index);
<anchor xml:id="_a00338_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1a97194a18c4b1d8f274a42c431ebab9e4">bit_index</link>&#32;-=&#32;<link linkend="_a00131_1a6b20d41d6252e9871430c242cb1a56e7">BUFFER_SIZE</link>;
<anchor xml:id="_a00338_source_1l00056"/>00056 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00338_source_1l00057"/>00057 
<anchor xml:id="_a00338_source_1l00058"/>00058 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Fill&#32;Check</emphasis>
<anchor xml:id="_a00338_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(stream-&gt;<link linkend="_a00400_1a655357dd976f916aed3eb30bc0a694d9">byte_index</link>&#32;==&#32;<link linkend="_a00086_1af7b7dc9a200cb1404c280bd500fd1551">BUFFER_LENGTH</link>&#32;-&#32;1){
<anchor xml:id="_a00338_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;entire&#32;filled&#32;buffer&#32;to&#32;File</emphasis>
<anchor xml:id="_a00338_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00122_1a94d988ea4ce93357f56c0191584246a6">F_WRITE</link>(stream-&gt;<link linkend="_a00400_1ab4d491f08cdd6da71b95cf04059412c6">rw_buffer</link>,&#32;<link linkend="_a00131_1a6b20d41d6252e9871430c242cb1a56e7">BUFFER_SIZE</link>,&#32;<link linkend="_a00086_1af7b7dc9a200cb1404c280bd500fd1551">BUFFER_LENGTH</link>&#32;-&#32;1,&#32;stream-&gt;<link linkend="_a00400_1ab10afab4dbcbfc99227c63ee0ae694ff">fs</link>);
<anchor xml:id="_a00338_source_1l00062"/>00062 
<anchor xml:id="_a00338_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Pull&#32;remaining&#32;data&#32;from&#32;Tail&#32;to&#32;Head</emphasis>
<anchor xml:id="_a00338_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1ab4d491f08cdd6da71b95cf04059412c6">rw_buffer</link>[0]&#32;=&#32;stream-&gt;<link linkend="_a00400_1ab4d491f08cdd6da71b95cf04059412c6">rw_buffer</link>[stream-&gt;<link linkend="_a00400_1a655357dd976f916aed3eb30bc0a694d9">byte_index</link>];
<anchor xml:id="_a00338_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1a655357dd976f916aed3eb30bc0a694d9">byte_index</link>&#32;=&#32;0;
<anchor xml:id="_a00338_source_1l00066"/>00066 
<anchor xml:id="_a00338_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00338_1ab232dbf9e1e9abf226e94b02fe510da4">_VUF_Clean</link>(stream,&#32;0);
<anchor xml:id="_a00338_source_1l00068"/>00068 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00338_source_1l00069"/>00069 
<anchor xml:id="_a00338_source_1l00070"/>00070 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_a00137_1a938a8c46255e5666f6a434ca0eb87f25a2ea4b6ef3fffc17dd1d38ab5c2837737">RES_OK</link>;
<anchor xml:id="_a00338_source_1l00071"/>00071 }
<anchor xml:id="_a00338_source_1l00072"/>00072 
<anchor xml:id="_a00338_source_1l00073"/><link linkend="_a00131_1aafa9034f88afca6a726a84673d063889">00073</link> uint32_t&#32;<link linkend="_a00338_1aafa9034f88afca6a726a84673d063889">VUF_read_stack</link>(<link linkend="_a00400">VUF</link>*&#32;stream,&#32;uint32_t&#32;length){
<anchor xml:id="_a00338_source_1l00074"/>00074 &#32;&#32;&#32;&#32;uint32_t&#32;varInt&#32;=&#32;stream-&gt;<link linkend="_a00400_1ab4d491f08cdd6da71b95cf04059412c6">rw_buffer</link>[stream-&gt;<link linkend="_a00400_1a655357dd976f916aed3eb30bc0a694d9">byte_index</link>]&#32;&lt;&lt;&#32;stream-&gt;<link linkend="_a00400_1a97194a18c4b1d8f274a42c431ebab9e4">bit_index</link>;
<anchor xml:id="_a00338_source_1l00075"/>00075 &#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1a97194a18c4b1d8f274a42c431ebab9e4">bit_index</link>&#32;+=&#32;length;
<anchor xml:id="_a00338_source_1l00076"/>00076 &#32;&#32;&#32;&#32;varInt&#32;&gt;&gt;=&#32;(<link linkend="_a00131_1a6b20d41d6252e9871430c242cb1a56e7">BUFFER_SIZE</link>&#32;-&#32;length);
<anchor xml:id="_a00338_source_1l00077"/>00077 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;Reading,&#32;%08X\n&quot;</emphasis>,&#32;varInt);
<anchor xml:id="_a00338_source_1l00078"/>00078 
<anchor xml:id="_a00338_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(stream-&gt;<link linkend="_a00400_1a97194a18c4b1d8f274a42c431ebab9e4">bit_index</link>&#32;&gt;=&#32;<link linkend="_a00131_1a6b20d41d6252e9871430c242cb1a56e7">BUFFER_SIZE</link>){
<anchor xml:id="_a00338_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1a97194a18c4b1d8f274a42c431ebab9e4">bit_index</link>&#32;-=&#32;<link linkend="_a00131_1a6b20d41d6252e9871430c242cb1a56e7">BUFFER_SIZE</link>;
<anchor xml:id="_a00338_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1a655357dd976f916aed3eb30bc0a694d9">byte_index</link>++;
<anchor xml:id="_a00338_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_a00338_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;varInt&#32;+=&#32;stream-&gt;<link linkend="_a00400_1ab4d491f08cdd6da71b95cf04059412c6">rw_buffer</link>[stream-&gt;<link linkend="_a00400_1a655357dd976f916aed3eb30bc0a694d9">byte_index</link>]&#32;&gt;&gt;&#32;((2&#32;*&#32;<link linkend="_a00131_1a6b20d41d6252e9871430c242cb1a56e7">BUFFER_SIZE</link>&#32;-&#32;length)&#32;%&#32;<link linkend="_a00131_1a6b20d41d6252e9871430c242cb1a56e7">BUFFER_SIZE</link>);
<anchor xml:id="_a00338_source_1l00084"/>00084 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00338_source_1l00085"/>00085 
<anchor xml:id="_a00338_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(stream-&gt;<link linkend="_a00400_1a655357dd976f916aed3eb30bc0a694d9">byte_index</link>&#32;&gt;=&#32;<link linkend="_a00086_1af7b7dc9a200cb1404c280bd500fd1551">BUFFER_LENGTH</link>&#32;-&#32;1){
<anchor xml:id="_a00338_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1ab4d491f08cdd6da71b95cf04059412c6">rw_buffer</link>[0]&#32;=&#32;stream-&gt;<link linkend="_a00400_1ab4d491f08cdd6da71b95cf04059412c6">rw_buffer</link>[<link linkend="_a00086_1af7b7dc9a200cb1404c280bd500fd1551">BUFFER_LENGTH</link>&#32;-&#32;1];
<anchor xml:id="_a00338_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1a655357dd976f916aed3eb30bc0a694d9">byte_index</link>&#32;=&#32;0;
<anchor xml:id="_a00338_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00122_1a6d14febd2771048b4a06dd86ea17718d">F_READ</link>(stream-&gt;<link linkend="_a00400_1ab4d491f08cdd6da71b95cf04059412c6">rw_buffer</link>&#32;+&#32;1,&#32;<link linkend="_a00131_1a6b20d41d6252e9871430c242cb1a56e7">BUFFER_SIZE</link>,&#32;<link linkend="_a00086_1af7b7dc9a200cb1404c280bd500fd1551">BUFFER_LENGTH</link>,&#32;stream-&gt;<link linkend="_a00400_1ab10afab4dbcbfc99227c63ee0ae694ff">fs</link>);
<anchor xml:id="_a00338_source_1l00090"/>00090 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00338_source_1l00091"/>00091 
<anchor xml:id="_a00338_source_1l00092"/>00092 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;%08X\n&quot;</emphasis>,&#32;varInt&#32;&gt;&gt;&#32;(<link linkend="_a00131_1a6b20d41d6252e9871430c242cb1a56e7">BUFFER_SIZE</link>&#32;-&#32;length));
<anchor xml:id="_a00338_source_1l00093"/>00093 
<anchor xml:id="_a00338_source_1l00094"/>00094 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;varInt;
<anchor xml:id="_a00338_source_1l00095"/>00095 }
<anchor xml:id="_a00338_source_1l00096"/>00096 
<anchor xml:id="_a00338_source_1l00097"/><link linkend="_a00131_1ad54b8d6492e4c149c7f1232e3eda58be">00097</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_a00338_1ad54b8d6492e4c149c7f1232e3eda58be">VUF_close</link>(<link linkend="_a00400">VUF</link>*&#32;stream){
<anchor xml:id="_a00338_source_1l00098"/>00098 &#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1a97194a18c4b1d8f274a42c431ebab9e4">bit_index</link>&#32;=&#32;0;
<anchor xml:id="_a00338_source_1l00099"/>00099 &#32;&#32;&#32;&#32;stream-&gt;<link linkend="_a00400_1a655357dd976f916aed3eb30bc0a694d9">byte_index</link>&#32;=&#32;0;
<anchor xml:id="_a00338_source_1l00100"/>00100 &#32;&#32;&#32;&#32;<link linkend="_a00122_1ad62e6a72675aa7b389460e97f4e6d998">F_CLOSE</link>(stream-&gt;<link linkend="_a00400_1ab10afab4dbcbfc99227c63ee0ae694ff">fs</link>);
<anchor xml:id="_a00338_source_1l00101"/>00101 
<anchor xml:id="_a00338_source_1l00102"/>00102 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_a00137_1a938a8c46255e5666f6a434ca0eb87f25a2ea4b6ef3fffc17dd1d38ab5c2837737">RES_OK</link>;
<anchor xml:id="_a00338_source_1l00103"/>00103 }
</programlisting></section>
