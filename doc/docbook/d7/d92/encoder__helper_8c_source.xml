<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_encoder__helper_8c_source" xml:lang="en-US">
<title>encoder_helper.c</title>
<indexterm><primary>src/encoder_helper.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_encoder__helper_8c_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_encoder__helper__functions_8h">encoder/encoder_helper_functions.h</link>&quot;</emphasis>
<anchor xml:id="_encoder__helper_8c_source_1l00002"/>00002 
<anchor xml:id="_encoder__helper_8c_source_1l00003"/><link linkend="_encoder__helper__functions_8h_1aa268d136b017ba11fca74d167e36dd34">00003</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_encoder__helper_8c_1aa268d136b017ba11fca74d167e36dd34">PrintBinary</link>(uint8_t&#32;<emphasis role="keywordtype">byte</emphasis>){
<anchor xml:id="_encoder__helper_8c_source_1l00004"/>00004 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;8;&#32;i++){
<anchor xml:id="_encoder__helper_8c_source_1l00005"/>00005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;%u&quot;</emphasis>,&#32;(<emphasis role="keywordtype">byte</emphasis>&#32;&amp;&#32;(1&#32;&lt;&lt;&#32;7))&#32;&gt;&gt;&#32;7);
<anchor xml:id="_encoder__helper_8c_source_1l00006"/>00006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;&lt;&lt;=&#32;1;
<anchor xml:id="_encoder__helper_8c_source_1l00007"/>00007 &#32;&#32;&#32;&#32;}
<anchor xml:id="_encoder__helper_8c_source_1l00008"/>00008 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;|&quot;</emphasis>);
<anchor xml:id="_encoder__helper_8c_source_1l00009"/>00009 
<anchor xml:id="_encoder__helper_8c_source_1l00010"/>00010 }
<anchor xml:id="_encoder__helper_8c_source_1l00011"/>00011 
<anchor xml:id="_encoder__helper_8c_source_1l00012"/><link linkend="_encoder__helper__functions_8h_1a7050a856b982bdf5a658945d470cd683">00012</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_encoder__helper_8c_1a7050a856b982bdf5a658945d470cd683">Encode</link>(uint8_t*&#32;destination,&#32;uint8_t&#32;index,&#32;uint8_t&#32;data,&#32;uint8_t&#32;length){
<anchor xml:id="_encoder__helper_8c_source_1l00013"/>00013 &#32;&#32;&#32;&#32;*(destination&#32;+&#32;index)&#32;&lt;&lt;=&#32;length;
<anchor xml:id="_encoder__helper_8c_source_1l00014"/>00014 &#32;&#32;&#32;&#32;*(destination&#32;+&#32;index)&#32;|=&#32;(data&#32;%&#32;(1&#32;&lt;&lt;&#32;length));
<anchor xml:id="_encoder__helper_8c_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<link linkend="_encoder__helper_8c_1aa268d136b017ba11fca74d167e36dd34">PrintBinary</link>(*(destination&#32;+&#32;index));
<anchor xml:id="_encoder__helper_8c_source_1l00016"/>00016 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;%d\n&quot;</emphasis>,&#32;data);
<anchor xml:id="_encoder__helper_8c_source_1l00017"/>00017 }
</programlisting></section>
