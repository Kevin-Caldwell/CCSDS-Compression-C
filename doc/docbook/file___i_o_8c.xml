<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_file___i_o_8c" xml:lang="en-US">
<title>src/file_IO.c File Reference</title>
<indexterm><primary>src/file_IO.c</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;files/file_IO.h&quot;<?linebreak?>#include &quot;files/logs.h&quot;<?linebreak?></programlisting>Include dependency graph for file_IO.c:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="file___i_o_8c__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_file___i_o_8c_1a2c398d1da0b5890e22a9377517c54874">Initialized</link> ()</para>
</listitem>
            <listitem><para>file_t * <link linkend="_file___i_o_8c_1a05d25080a4592a86386f6d0d3d48496c">F_OPEN</link> (const char *file_name, FileMode open_mode)</para>
</listitem>
            <listitem><para>size_t <link linkend="_file___i_o_8c_1a94d988ea4ce93357f56c0191584246a6">F_WRITE</link> (const void *write_ptr, size_t member_size, size_t member_count, file_t *file_ptr)</para>
</listitem>
            <listitem><para>size_t <link linkend="_file___i_o_8c_1a6d14febd2771048b4a06dd86ea17718d">F_READ</link> (void *destination, size_t size, size_t arr_length, file_t *file_stream)</para>
</listitem>
            <listitem><para>int <link linkend="_file___i_o_8c_1ad62e6a72675aa7b389460e97f4e6d998">F_CLOSE</link> (file_t *stream)</para>
</listitem>
            <listitem><para>int <link linkend="_file___i_o_8c_1a4b306680e215dfe285fa220421141d38">F_EMPTY</link> (file_t *stream)</para>
</listitem>
            <listitem><para>int <link linkend="_file___i_o_8c_1a3ac9e7bef40307b69bdf5e0cb6904d83">F_SEEK</link> (file_t *stream, long int offset)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>const char * <link linkend="_file___i_o_8c_1aed9fcf257d5879cc1d4a649543e3cd12">file_modes_str</link> [] = {&quot;r&quot;, &quot;w&quot;, &quot;a&quot;, &quot;r+&quot;, &quot;w+&quot;, &quot;a+&quot;}</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_file___i_o_8c_1ad62e6a72675aa7b389460e97f4e6d998"/><section>
    <title>F_CLOSE()</title>
<indexterm><primary>F_CLOSE</primary><secondary>file_IO.c</secondary></indexterm>
<indexterm><primary>file_IO.c</primary><secondary>F_CLOSE</secondary></indexterm>
<para><computeroutput>int F_CLOSE (file_t * stream)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="file___i_o_8c_ad62e6a72675aa7b389460e97f4e6d998_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_file___i_o_8c_1a4b306680e215dfe285fa220421141d38"/><section>
    <title>F_EMPTY()</title>
<indexterm><primary>F_EMPTY</primary><secondary>file_IO.c</secondary></indexterm>
<indexterm><primary>file_IO.c</primary><secondary>F_EMPTY</secondary></indexterm>
<para><computeroutput>int F_EMPTY (file_t * stream)</computeroutput></para></section>
<anchor xml:id="_file___i_o_8c_1a05d25080a4592a86386f6d0d3d48496c"/><section>
    <title>F_OPEN()</title>
<indexterm><primary>F_OPEN</primary><secondary>file_IO.c</secondary></indexterm>
<indexterm><primary>file_IO.c</primary><secondary>F_OPEN</secondary></indexterm>
<para><computeroutput>file_t * F_OPEN (const char * file_name, FileMode open_mode)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="file___i_o_8c_a05d25080a4592a86386f6d0d3d48496c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_file___i_o_8c_1a6d14febd2771048b4a06dd86ea17718d"/><section>
    <title>F_READ()</title>
<indexterm><primary>F_READ</primary><secondary>file_IO.c</secondary></indexterm>
<indexterm><primary>file_IO.c</primary><secondary>F_READ</secondary></indexterm>
<para><computeroutput>size_t F_READ (void * destination, size_t size, size_t arr_length, file_t * file_stream)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="file___i_o_8c_a6d14febd2771048b4a06dd86ea17718d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_file___i_o_8c_1a3ac9e7bef40307b69bdf5e0cb6904d83"/><section>
    <title>F_SEEK()</title>
<indexterm><primary>F_SEEK</primary><secondary>file_IO.c</secondary></indexterm>
<indexterm><primary>file_IO.c</primary><secondary>F_SEEK</secondary></indexterm>
<para><computeroutput>int F_SEEK (file_t * stream, long int offset)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="file___i_o_8c_a3ac9e7bef40307b69bdf5e0cb6904d83_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_file___i_o_8c_1a94d988ea4ce93357f56c0191584246a6"/><section>
    <title>F_WRITE()</title>
<indexterm><primary>F_WRITE</primary><secondary>file_IO.c</secondary></indexterm>
<indexterm><primary>file_IO.c</primary><secondary>F_WRITE</secondary></indexterm>
<para><computeroutput>size_t F_WRITE (const void * write_ptr, size_t member_size, size_t member_count, file_t * file_ptr)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="file___i_o_8c_a94d988ea4ce93357f56c0191584246a6_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_file___i_o_8c_1a2c398d1da0b5890e22a9377517c54874"/><section>
    <title>Initialized()</title>
<indexterm><primary>Initialized</primary><secondary>file_IO.c</secondary></indexterm>
<indexterm><primary>file_IO.c</primary><secondary>Initialized</secondary></indexterm>
<para><computeroutput>int Initialized ( )</computeroutput></para></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_file___i_o_8c_1aed9fcf257d5879cc1d4a649543e3cd12"/><section>
    <title>file_modes_str</title>
<indexterm><primary>file_modes_str</primary><secondary>file_IO.c</secondary></indexterm>
<indexterm><primary>file_IO.c</primary><secondary>file_modes_str</secondary></indexterm>
<para><computeroutput>const char* file_modes_str[] = {&quot;r&quot;, &quot;w&quot;, &quot;a&quot;, &quot;r+&quot;, &quot;w+&quot;, &quot;a+&quot;}</computeroutput></para></section>
</section>
</section>
