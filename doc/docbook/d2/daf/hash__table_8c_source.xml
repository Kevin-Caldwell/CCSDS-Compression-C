<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_hash__table_8c_source" xml:lang="en-US">
<title>hash_table.c</title>
<indexterm><primary>src/hash_table.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_hash__table_8c_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_hash__table_8h">dst/hash_table.h</link>&quot;</emphasis>
<anchor xml:id="_hash__table_8c_source_1l00002"/>00002 
<anchor xml:id="_hash__table_8c_source_1l00003"/><link linkend="_hash__table_8h_1aecf492d271c7b0c50c1832371fb34c84">00003</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_hash__table_8c_1aecf492d271c7b0c50c1832371fb34c84">Hash_InitializeHashTable</link>(<link linkend="_struct_hash_table">HashTable</link>&#32;**hash){
<anchor xml:id="_hash__table_8c_source_1l00004"/>00004 &#32;&#32;&#32;&#32;*hash&#32;=&#32;malloc(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_struct_hash_table">HashTable</link>));
<anchor xml:id="_hash__table_8c_source_1l00005"/>00005 &#32;&#32;&#32;&#32;(*hash)-&gt;len&#32;=&#32;0;
<anchor xml:id="_hash__table_8c_source_1l00006"/>00006 &#32;&#32;&#32;&#32;
<anchor xml:id="_hash__table_8c_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_hash__table_8c_source_1l00008"/>00008 }
<anchor xml:id="_hash__table_8c_source_1l00009"/>00009 
<anchor xml:id="_hash__table_8c_source_1l00010"/><link linkend="_hash__table_8h_1a0f96cedf42d4440115356ae74e627126">00010</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_hash__table_8c_1a0f96cedf42d4440115356ae74e627126">Hash_DeleteHashTable</link>(<link linkend="_struct_hash_table">HashTable</link>*&#32;hash){
<anchor xml:id="_hash__table_8c_source_1l00011"/>00011 &#32;&#32;&#32;&#32;free(hash);
<anchor xml:id="_hash__table_8c_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_hash__table_8c_source_1l00013"/>00013 }
<anchor xml:id="_hash__table_8c_source_1l00014"/>00014 
<anchor xml:id="_hash__table_8c_source_1l00015"/><link linkend="_hash__table_8h_1af0c750fb9a54f590b713d6526ed263fc">00015</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_hash__table_8c_1af0c750fb9a54f590b713d6526ed263fc">Hash_AddEntry</link>(<link linkend="_struct_hash_table">HashTable</link>&#32;*hash,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;name,&#32;int32_t&#32;data)
<anchor xml:id="_hash__table_8c_source_1l00016"/>00016 {
<anchor xml:id="_hash__table_8c_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hash-&gt;<link linkend="_struct_hash_table_1afed088663f8704004425cdae2120b9b3">len</link>&#32;==&#32;<link linkend="_hash__table_8h_1ac5ff60f58cdc7ee42543e2812a8cae47">HASH_CAPACITY</link>)
<anchor xml:id="_hash__table_8c_source_1l00018"/>00018 &#32;&#32;&#32;&#32;{
<anchor xml:id="_hash__table_8c_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="_hash__table_8c_source_1l00020"/>00020 &#32;&#32;&#32;&#32;}
<anchor xml:id="_hash__table_8c_source_1l00021"/>00021 
<anchor xml:id="_hash__table_8c_source_1l00022"/>00022 &#32;&#32;&#32;&#32;hash-&gt;<link linkend="_struct_hash_table_1afe6af42ae11ea67b9e6403bd99a4f99d">data</link>[hash-&gt;<link linkend="_struct_hash_table_1afed088663f8704004425cdae2120b9b3">len</link>]&#32;=&#32;data;
<anchor xml:id="_hash__table_8c_source_1l00023"/>00023 &#32;&#32;&#32;&#32;strncpy(hash-&gt;<link linkend="_struct_hash_table_1aa429745e164770f5a9545fd31ba633b1">keys</link>[hash-&gt;<link linkend="_struct_hash_table_1afed088663f8704004425cdae2120b9b3">len</link>++],&#32;name,&#32;<link linkend="_hash__table_8h_1a5145aca5cb4a65b79b24d162d6fd72eb">KEY_LENGTH</link>);
<anchor xml:id="_hash__table_8c_source_1l00024"/>00024 }
<anchor xml:id="_hash__table_8c_source_1l00025"/>00025 
<anchor xml:id="_hash__table_8c_source_1l00026"/><link linkend="_hash__table_8h_1a7026562de200bd5e9813f101d9eb614b">00026</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_hash__table_8c_1a7026562de200bd5e9813f101d9eb614b">Hash_GetIndex</link>(<link linkend="_struct_hash_table">HashTable</link>&#32;*hash,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*key)
<anchor xml:id="_hash__table_8c_source_1l00027"/>00027 {
<anchor xml:id="_hash__table_8c_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;index&#32;=&#32;0;
<anchor xml:id="_hash__table_8c_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(index&#32;=&#32;0;&#32;index&#32;&lt;&#32;hash-&gt;<link linkend="_struct_hash_table_1afed088663f8704004425cdae2120b9b3">len</link>;&#32;index++)
<anchor xml:id="_hash__table_8c_source_1l00030"/>00030 &#32;&#32;&#32;&#32;{
<anchor xml:id="_hash__table_8c_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!strncmp(hash-&gt;<link linkend="_struct_hash_table_1aa429745e164770f5a9545fd31ba633b1">keys</link>[index],&#32;key,&#32;<link linkend="_hash__table_8h_1a5145aca5cb4a65b79b24d162d6fd72eb">KEY_LENGTH</link>))
<anchor xml:id="_hash__table_8c_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_hash__table_8c_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_hash__table_8c_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_hash__table_8c_source_1l00035"/>00035 &#32;&#32;&#32;&#32;}
<anchor xml:id="_hash__table_8c_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;index;
<anchor xml:id="_hash__table_8c_source_1l00037"/>00037 }
<anchor xml:id="_hash__table_8c_source_1l00038"/>00038 
<anchor xml:id="_hash__table_8c_source_1l00039"/><link linkend="_hash__table_8h_1a27578c1b5a3ab68d8f144ed86ea72cc2">00039</link> int32_t&#32;<link linkend="_hash__table_8c_1a27578c1b5a3ab68d8f144ed86ea72cc2">Hash_GetValue</link>(<link linkend="_struct_hash_table">HashTable</link>&#32;*hash,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*key)
<anchor xml:id="_hash__table_8c_source_1l00040"/>00040 {
<anchor xml:id="_hash__table_8c_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;hash-&gt;<link linkend="_struct_hash_table_1afe6af42ae11ea67b9e6403bd99a4f99d">data</link>[<link linkend="_hash__table_8c_1a7026562de200bd5e9813f101d9eb614b">Hash_GetIndex</link>(hash,&#32;key)];
<anchor xml:id="_hash__table_8c_source_1l00042"/>00042 }
<anchor xml:id="_hash__table_8c_source_1l00043"/>00043 
<anchor xml:id="_hash__table_8c_source_1l00044"/><link linkend="_hash__table_8h_1ae198aa5dfcbf0fa9e5fb885e34e08b0c">00044</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_hash__table_8c_1ae198aa5dfcbf0fa9e5fb885e34e08b0c">Hash_SetValue</link>(<link linkend="_struct_hash_table">HashTable</link>&#32;*hash,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*key,&#32;int32_t&#32;new_data)
<anchor xml:id="_hash__table_8c_source_1l00045"/>00045 {
<anchor xml:id="_hash__table_8c_source_1l00046"/>00046 &#32;&#32;&#32;&#32;hash-&gt;<link linkend="_struct_hash_table_1afe6af42ae11ea67b9e6403bd99a4f99d">data</link>[<link linkend="_hash__table_8c_1a7026562de200bd5e9813f101d9eb614b">Hash_GetIndex</link>(hash,&#32;key)]&#32;=&#32;new_data;
<anchor xml:id="_hash__table_8c_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_hash__table_8c_source_1l00048"/>00048 }
</programlisting></section>
