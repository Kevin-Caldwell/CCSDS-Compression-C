<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_encoder__body_8c" xml:lang="en-US">
<title>src/encoder_body.c File Reference</title>
<indexterm><primary>src/encoder_body.c</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;encoder/body.h&quot;<?linebreak?>#include &lt;time.h&gt;<?linebreak?></programlisting>Include dependency graph for encoder_body.c:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="encoder__body_8c__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>GolombInt <link linkend="_encoder__body_8c_1ad956397a2e57dfa4fe588564adef610f">GolombPowerTwo</link> (uint16_t j, uint16_t k)</para>
</listitem>
            <listitem><para>unsigned int <link linkend="_encoder__body_8c_1a8efd6761bcd40cdfb8e0ca4e1f39ef6b">InitAccumulatorValue</link> (uint32_t z)</para>
</listitem>
            <listitem><para>int <link linkend="_encoder__body_8c_1a38c7868c2a8819e7abc16148811f2e0b">EncodeBody</link> (image *hIMG, const char *file_name, const char *write_mode, int buffer_size)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>int32_t <link linkend="_encoder__body_8c_1a91ccd9d57c28978c8a72b72c259897a1">K</link> = 0</para>
</listitem>
            <listitem><para>uint32_t <link linkend="_encoder__body_8c_1accd4705d6efddcbadb13f806b56d6eb5">U_max</link> = (uint32_t) CLIP(UNARY_LENGTH_LIMIT, 8, 32)</para>
</listitem>
            <listitem><para>uint32_t <link linkend="_encoder__body_8c_1a0e085a6aabb7bbd4608065f1855dc88e">Gamma1</link> = 1</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_encoder__body_8c_1a38c7868c2a8819e7abc16148811f2e0b"/><section>
    <title>EncodeBody()</title>
<indexterm><primary>EncodeBody</primary><secondary>encoder_body.c</secondary></indexterm>
<indexterm><primary>encoder_body.c</primary><secondary>EncodeBody</secondary></indexterm>
<para><computeroutput>int EncodeBody (image * hIMG, const char * file_name, const char * write_mode, int buffer_size)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="encoder__body_8c_a38c7868c2a8819e7abc16148811f2e0b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="encoder__body_8c_a38c7868c2a8819e7abc16148811f2e0b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_encoder__body_8c_1ad956397a2e57dfa4fe588564adef610f"/><section>
    <title>GolombPowerTwo()</title>
<indexterm><primary>GolombPowerTwo</primary><secondary>encoder_body.c</secondary></indexterm>
<indexterm><primary>encoder_body.c</primary><secondary>GolombPowerTwo</secondary></indexterm>
<para><computeroutput>GolombInt GolombPowerTwo (uint16_t j, uint16_t k)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="encoder__body_8c_ad956397a2e57dfa4fe588564adef610f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_encoder__body_8c_1a8efd6761bcd40cdfb8e0ca4e1f39ef6b"/><section>
    <title>InitAccumulatorValue()</title>
<indexterm><primary>InitAccumulatorValue</primary><secondary>encoder_body.c</secondary></indexterm>
<indexterm><primary>encoder_body.c</primary><secondary>InitAccumulatorValue</secondary></indexterm>
<para><computeroutput>unsigned int InitAccumulatorValue (uint32_t z)</computeroutput></para></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_encoder__body_8c_1a0e085a6aabb7bbd4608065f1855dc88e"/><section>
    <title>Gamma1</title>
<indexterm><primary>Gamma1</primary><secondary>encoder_body.c</secondary></indexterm>
<indexterm><primary>encoder_body.c</primary><secondary>Gamma1</secondary></indexterm>
<para><computeroutput>uint32_t Gamma1 = 1</computeroutput></para></section>
<anchor xml:id="_encoder__body_8c_1a91ccd9d57c28978c8a72b72c259897a1"/><section>
    <title>K</title>
<indexterm><primary>K</primary><secondary>encoder_body.c</secondary></indexterm>
<indexterm><primary>encoder_body.c</primary><secondary>K</secondary></indexterm>
<para><computeroutput>int32_t K = 0</computeroutput></para></section>
<anchor xml:id="_encoder__body_8c_1accd4705d6efddcbadb13f806b56d6eb5"/><section>
    <title>U_max</title>
<indexterm><primary>U_max</primary><secondary>encoder_body.c</secondary></indexterm>
<indexterm><primary>encoder_body.c</primary><secondary>U_max</secondary></indexterm>
<para><computeroutput>uint32_t U_max = (uint32_t) CLIP(UNARY_LENGTH_LIMIT, 8, 32)</computeroutput></para></section>
</section>
</section>
