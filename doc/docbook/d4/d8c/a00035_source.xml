<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_a00035_source" xml:lang="en-US">
<title>mat_to_csv.py</title>
<indexterm><primary>python/mat_to_csv.py</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_a00035_source_1l00001"/><link linkend="_a00363">00001</link> <emphasis role="keyword">import</emphasis>&#32;scipy
<anchor xml:id="_a00035_source_1l00002"/>00002 <emphasis role="keyword">import</emphasis>&#32;numpy&#32;<emphasis role="keyword">as</emphasis>&#32;np
<anchor xml:id="_a00035_source_1l00003"/>00003 <emphasis role="keyword">import</emphasis>&#32;sys
<anchor xml:id="_a00035_source_1l00004"/>00004 <emphasis role="keyword">import</emphasis>&#32;csv_io
<anchor xml:id="_a00035_source_1l00005"/>00005 
<anchor xml:id="_a00035_source_1l00006"/>00006 
<anchor xml:id="_a00035_source_1l00007"/><link linkend="_a00363_1a53c8b63647024371209f34ff11f676af">00007</link> <emphasis role="keyword">def&#32;</emphasis>load_pic(file_name,&#32;header=&quot;indian_pines&quot;):
<anchor xml:id="_a00035_source_1l00008"/>00008 
<anchor xml:id="_a00035_source_1l00009"/>00009 &#32;&#32;&#32;&#32;data&#32;=&#32;scipy.io.loadmat(file_name)
<anchor xml:id="_a00035_source_1l00010"/>00010 &#32;&#32;&#32;&#32;data&#32;=&#32;data[header]&#32;&#32;<emphasis role="comment">#&#32;data&#32;is&#32;dictionary,&#32;only&#32;take&#32;the&#32;array&#32;part</emphasis>
<anchor xml:id="_a00035_source_1l00011"/>00011 &#32;&#32;&#32;&#32;data&#32;=&#32;np.array(data,&#32;dtype=np.int64)
<anchor xml:id="_a00035_source_1l00012"/>00012 
<anchor xml:id="_a00035_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;data_n&#32;=&#32;np.zeros_like(data)</emphasis>
<anchor xml:id="_a00035_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;size&#32;=&#32;data_n.shape</emphasis>
<anchor xml:id="_a00035_source_1l00015"/>00015 
<anchor xml:id="_a00035_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;for&#32;i&#32;in&#32;range(size[0]):</emphasis>
<anchor xml:id="_a00035_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;for&#32;j&#32;in&#32;range(size[1]):</emphasis>
<anchor xml:id="_a00035_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="comment">#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;k&#32;i</emphasis>
<anchor xml:id="_a00035_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;data
<anchor xml:id="_a00035_source_1l00020"/>00020 
<anchor xml:id="_a00035_source_1l00021"/>00021 <emphasis role="keywordflow">if</emphasis>&#32;__name__&#32;==&#32;<emphasis role="stringliteral">&quot;__main__&quot;</emphasis>:
<anchor xml:id="_a00035_source_1l00022"/><link linkend="_a00363_1a21bbd772bda66a652cb421b8dcbbb582">00022</link> &#32;&#32;&#32;&#32;argS&#32;=&#32;sys.argv
<anchor xml:id="_a00035_source_1l00023"/>00023 
<anchor xml:id="_a00035_source_1l00024"/>00024 &#32;&#32;&#32;&#32;print(argS)
<anchor xml:id="_a00035_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(len(argS)&#32;==&#32;7):
<anchor xml:id="_a00035_source_1l00026"/><link linkend="_a00363_1a5c7e4f16622600cb52580b191565e2dd">00026</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Nx&#32;=&#32;int(argS[4])
<anchor xml:id="_a00035_source_1l00027"/><link linkend="_a00363_1ac1452fdfd6ea1c8c005ac90bbfa62011">00027</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ny&#32;=&#32;int(argS[5])
<anchor xml:id="_a00035_source_1l00028"/><link linkend="_a00363_1af3ec54a0e6bc4935a13fb520b7d7df6e">00028</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Nz&#32;=&#32;int(argS[6])
<anchor xml:id="_a00035_source_1l00029"/><link linkend="_a00363_1a511ae0b1c13f95e5f08f1a0dd3da3d93">00029</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data&#32;=&#32;load_pic(argS[1],&#32;argS[2])[:Nx,&#32;:Ny,&#32;:Nz]
<anchor xml:id="_a00035_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00356_1af953609f65420e99a9c283dfa65c5453">csv_io.SaveCSV</link>(data,&#32;f<emphasis role="stringliteral">&quot;{argS[3]}.csv&quot;</emphasis>)
<anchor xml:id="_a00035_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;(len(argS)&#32;==&#32;5):
<anchor xml:id="_a00035_source_1l00032"/><link linkend="_a00363_1aeab71244afb687f16d8c4f5ee9d6ef0e">00032</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;n&#32;=&#32;int(argS[4])
<anchor xml:id="_a00035_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data&#32;=&#32;load_pic(argS[1],&#32;argS[2])[:n,&#32;:n,&#32;:n]
<anchor xml:id="_a00035_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00356_1af953609f65420e99a9c283dfa65c5453">csv_io.SaveCSV</link>(data,&#32;f<emphasis role="stringliteral">&quot;{argS[3]}.csv&quot;</emphasis>)
<anchor xml:id="_a00035_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">elif</emphasis>&#32;(len(argS)&#32;==&#32;4):
<anchor xml:id="_a00035_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;data&#32;=&#32;load_pic(argS[1],&#32;argS[2])
<anchor xml:id="_a00035_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00356_1af953609f65420e99a9c283dfa65c5453">csv_io.SaveCSV</link>(data,&#32;f<emphasis role="stringliteral">&quot;{argS[3]}.csv&quot;</emphasis>)
<anchor xml:id="_a00035_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>:
<anchor xml:id="_a00035_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;print(<emphasis role="stringliteral">&quot;arg&#32;needed:&#32;src.mat&#32;data_header&#32;destname&#32;(optional:&#32;img_dim1&#32;img_dim2&#32;img_dim3)&quot;</emphasis>)
</programlisting></section>
