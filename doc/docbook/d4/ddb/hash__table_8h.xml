<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_hash__table_8h" xml:lang="en-US">
<title>include/dst/hash_table.h File Reference</title>
<indexterm><primary>include/dst/hash_table.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;stdlib.h&gt;<?linebreak?>#include &lt;inttypes.h&gt;<?linebreak?>#include &lt;string.h&gt;<?linebreak?></programlisting>Include dependency graph for hash_table.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d1/d4d/hash__table_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d9/da9/hash__table_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_hash_table">HashTable</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_hash__table_8h_1ac5ff60f58cdc7ee42543e2812a8cae47">HASH_CAPACITY</link>&#160;&#160;&#160;30</para>
</listitem>
            <listitem><para>#define <link linkend="_hash__table_8h_1a5145aca5cb4a65b79b24d162d6fd72eb">KEY_LENGTH</link>&#160;&#160;&#160;30</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct <link linkend="_struct_hash_table">HashTable</link> <link linkend="_hash__table_8h_1a8dea4341d1b1662a30ec89ea38da0c0c">HashTable</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_hash__table_8h_1aecf492d271c7b0c50c1832371fb34c84">Hash_InitializeHashTable</link> (<link linkend="_struct_hash_table">HashTable</link> **hash)</para>
</listitem>
            <listitem><para>int <link linkend="_hash__table_8h_1a0f96cedf42d4440115356ae74e627126">Hash_DeleteHashTable</link> (<link linkend="_struct_hash_table">HashTable</link> *hash)</para>
</listitem>
            <listitem><para>int <link linkend="_hash__table_8h_1af0c750fb9a54f590b713d6526ed263fc">Hash_AddEntry</link> (<link linkend="_struct_hash_table">HashTable</link> *hash, const char *name, int32_t data)</para>
</listitem>
            <listitem><para>int <link linkend="_hash__table_8h_1a7026562de200bd5e9813f101d9eb614b">Hash_GetIndex</link> (<link linkend="_struct_hash_table">HashTable</link> *hash, const char *key)</para>
</listitem>
            <listitem><para>int32_t <link linkend="_hash__table_8h_1a27578c1b5a3ab68d8f144ed86ea72cc2">Hash_GetValue</link> (<link linkend="_struct_hash_table">HashTable</link> *hash, const char *key)</para>
</listitem>
            <listitem><para>int <link linkend="_hash__table_8h_1ae198aa5dfcbf0fa9e5fb885e34e08b0c">Hash_SetValue</link> (<link linkend="_struct_hash_table">HashTable</link> *hash, const char *key, int32_t new_data)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_hash__table_8h_1ac5ff60f58cdc7ee42543e2812a8cae47"/><section>
    <title>HASH_CAPACITY</title>
<indexterm><primary>HASH_CAPACITY</primary><secondary>hash_table.h</secondary></indexterm>
<indexterm><primary>hash_table.h</primary><secondary>HASH_CAPACITY</secondary></indexterm>
<para><computeroutput>#define HASH_CAPACITY&#160;&#160;&#160;30</computeroutput></para>
<para><link linkend="_hash__table_8h">hash_table.h</link> <formalpara><title>Authors</title>

<para>@Kevin-Caldwell</para>
</formalpara>
Hash Table Implementation for Storing Constants. Uses Dynamically allocated memory for storage</para>

<para>Dependencies stdlib inttypes string</para>

<para>Features Initialization Deletion Add Entries Get Index Get and Set Value</para>

<para>TODO Comments Statically Allocated Memory (High Priority) </para>
<para>
Definition at line <link linkend="_hash__table_8h_source_1l00033">33</link> of file <link linkend="_hash__table_8h_source">hash_table.h</link>.</para>
</section>
<anchor xml:id="_hash__table_8h_1a5145aca5cb4a65b79b24d162d6fd72eb"/><section>
    <title>KEY_LENGTH</title>
<indexterm><primary>KEY_LENGTH</primary><secondary>hash_table.h</secondary></indexterm>
<indexterm><primary>hash_table.h</primary><secondary>KEY_LENGTH</secondary></indexterm>
<para><computeroutput>#define KEY_LENGTH&#160;&#160;&#160;30</computeroutput></para><para>
Definition at line <link linkend="_hash__table_8h_source_1l00034">34</link> of file <link linkend="_hash__table_8h_source">hash_table.h</link>.</para>
</section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_hash__table_8h_1a8dea4341d1b1662a30ec89ea38da0c0c"/><section>
    <title>HashTable</title>
<indexterm><primary>HashTable</primary><secondary>hash_table.h</secondary></indexterm>
<indexterm><primary>hash_table.h</primary><secondary>HashTable</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_hash_table">HashTable</link> <link linkend="_struct_hash_table">HashTable</link></computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_hash__table_8h_1af0c750fb9a54f590b713d6526ed263fc"/><section>
    <title>Hash_AddEntry()</title>
<indexterm><primary>Hash_AddEntry</primary><secondary>hash_table.h</secondary></indexterm>
<indexterm><primary>hash_table.h</primary><secondary>Hash_AddEntry</secondary></indexterm>
<para><computeroutput>int Hash_AddEntry (<link linkend="_struct_hash_table">HashTable</link> * hash, const char * name, int32_t data)</computeroutput></para><para>
Definition at line <link linkend="_hash__table_8c_source_1l00015">15</link> of file <link linkend="_hash__table_8c_source">hash_table.c</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d4/ddb/hash__table_8h_af0c750fb9a54f590b713d6526ed263fc_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_hash__table_8h_1a0f96cedf42d4440115356ae74e627126"/><section>
    <title>Hash_DeleteHashTable()</title>
<indexterm><primary>Hash_DeleteHashTable</primary><secondary>hash_table.h</secondary></indexterm>
<indexterm><primary>hash_table.h</primary><secondary>Hash_DeleteHashTable</secondary></indexterm>
<para><computeroutput>int Hash_DeleteHashTable (<link linkend="_struct_hash_table">HashTable</link> * hash)</computeroutput></para><para>
Definition at line <link linkend="_hash__table_8c_source_1l00010">10</link> of file <link linkend="_hash__table_8c_source">hash_table.c</link>.</para>
</section>
<anchor xml:id="_hash__table_8h_1a7026562de200bd5e9813f101d9eb614b"/><section>
    <title>Hash_GetIndex()</title>
<indexterm><primary>Hash_GetIndex</primary><secondary>hash_table.h</secondary></indexterm>
<indexterm><primary>hash_table.h</primary><secondary>Hash_GetIndex</secondary></indexterm>
<para><computeroutput>int Hash_GetIndex (<link linkend="_struct_hash_table">HashTable</link> * hash, const char * key)</computeroutput></para><para>
Definition at line <link linkend="_hash__table_8c_source_1l00026">26</link> of file <link linkend="_hash__table_8c_source">hash_table.c</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d4/ddb/hash__table_8h_a7026562de200bd5e9813f101d9eb614b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_hash__table_8h_1a27578c1b5a3ab68d8f144ed86ea72cc2"/><section>
    <title>Hash_GetValue()</title>
<indexterm><primary>Hash_GetValue</primary><secondary>hash_table.h</secondary></indexterm>
<indexterm><primary>hash_table.h</primary><secondary>Hash_GetValue</secondary></indexterm>
<para><computeroutput>int32_t Hash_GetValue (<link linkend="_struct_hash_table">HashTable</link> * hash, const char * key)</computeroutput></para><para>
Definition at line <link linkend="_hash__table_8c_source_1l00039">39</link> of file <link linkend="_hash__table_8c_source">hash_table.c</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d4/ddb/hash__table_8h_a27578c1b5a3ab68d8f144ed86ea72cc2_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d4/ddb/hash__table_8h_a27578c1b5a3ab68d8f144ed86ea72cc2_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_hash__table_8h_1aecf492d271c7b0c50c1832371fb34c84"/><section>
    <title>Hash_InitializeHashTable()</title>
<indexterm><primary>Hash_InitializeHashTable</primary><secondary>hash_table.h</secondary></indexterm>
<indexterm><primary>hash_table.h</primary><secondary>Hash_InitializeHashTable</secondary></indexterm>
<para><computeroutput>int Hash_InitializeHashTable (<link linkend="_struct_hash_table">HashTable</link> ** hash)</computeroutput></para><para>
Definition at line <link linkend="_hash__table_8c_source_1l00003">3</link> of file <link linkend="_hash__table_8c_source">hash_table.c</link>.</para>
</section>
<anchor xml:id="_hash__table_8h_1ae198aa5dfcbf0fa9e5fb885e34e08b0c"/><section>
    <title>Hash_SetValue()</title>
<indexterm><primary>Hash_SetValue</primary><secondary>hash_table.h</secondary></indexterm>
<indexterm><primary>hash_table.h</primary><secondary>Hash_SetValue</secondary></indexterm>
<para><computeroutput>int Hash_SetValue (<link linkend="_struct_hash_table">HashTable</link> * hash, const char * key, int32_t new_data)</computeroutput></para><para>
Definition at line <link linkend="_hash__table_8c_source_1l00044">44</link> of file <link linkend="_hash__table_8c_source">hash_table.c</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../d4/ddb/hash__table_8h_ae198aa5dfcbf0fa9e5fb885e34e08b0c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
