<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_stream__encoder_8h_source" xml:lang="en-US">
<title>stream_encoder.h</title>
<indexterm><primary>include/encoder/stream_encoder.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_stream__encoder_8h_source_1l00001"/>00001 
<anchor xml:id="_stream__encoder_8h_source_1l00008"/>00008 <emphasis role="preprocessor">#ifndef&#32;STREAM_ENCODER_H</emphasis>
<anchor xml:id="_stream__encoder_8h_source_1l00009"/>00009 <emphasis role="preprocessor">#define&#32;STREAM_ENCODER_H</emphasis>
<anchor xml:id="_stream__encoder_8h_source_1l00010"/>00010 
<anchor xml:id="_stream__encoder_8h_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&lt;inttypes.h&gt;</emphasis>
<anchor xml:id="_stream__encoder_8h_source_1l00012"/>00012 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
<anchor xml:id="_stream__encoder_8h_source_1l00013"/>00013 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_file___i_o_8h">files/file_IO.h</link>&quot;</emphasis>
<anchor xml:id="_stream__encoder_8h_source_1l00014"/>00014 
<anchor xml:id="_stream__encoder_8h_source_1l00015"/><link linkend="_stream__encoder_8h_1abc23dc7967a47b4db3efff8237ef3a2f">00015</link> <emphasis role="preprocessor">#define&#32;L_SHIFT(x,&#32;s)&#32;(s&#32;&lt;&#32;0&#32;?&#32;x&#32;&gt;&gt;&#32;-s&#32;:&#32;x&#32;&lt;&lt;&#32;s)</emphasis>
<anchor xml:id="_stream__encoder_8h_source_1l00016"/>00016 
<anchor xml:id="_stream__encoder_8h_source_1l00017"/><link linkend="_stream__encoder_8h_1a548781ef0de810de1f925dff4d5d3f9a">00017</link> <emphasis role="preprocessor">#define&#32;BUFFER_REG_SIZE&#32;32</emphasis>
<anchor xml:id="_stream__encoder_8h_source_1l00018"/><link linkend="_stream__encoder_8h_1af7b7dc9a200cb1404c280bd500fd1551">00018</link> <emphasis role="preprocessor">#define&#32;BUFFER_LENGTH&#32;15</emphasis>
<anchor xml:id="_stream__encoder_8h_source_1l00019"/>00019 
<anchor xml:id="_stream__encoder_8h_source_1l00020"/><link linkend="_struct_var_int_file_stream">00020</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_var_int_file_stream">VarIntFileStream</link>
<anchor xml:id="_stream__encoder_8h_source_1l00021"/>00021 {
<anchor xml:id="_stream__encoder_8h_source_1l00022"/><link linkend="_struct_var_int_file_stream_1ab10afab4dbcbfc99227c63ee0ae694ff">00022</link> &#32;&#32;&#32;&#32;<link linkend="_file___i_o_8h_1aaa4f66633ab727c9d841db141c3da088">file_t</link>&#32;*<link linkend="_struct_var_int_file_stream_1ab10afab4dbcbfc99227c63ee0ae694ff">fs</link>;
<anchor xml:id="_stream__encoder_8h_source_1l00023"/>00023 
<anchor xml:id="_stream__encoder_8h_source_1l00024"/><link linkend="_struct_var_int_file_stream_1a1e5757374503c98182efdc688999f91f">00024</link> &#32;&#32;&#32;&#32;int32_t&#32;<link linkend="_struct_var_int_file_stream_1a1e5757374503c98182efdc688999f91f">bit_ptr</link>;
<anchor xml:id="_stream__encoder_8h_source_1l00025"/><link linkend="_struct_var_int_file_stream_1a97ecce5e0a58b1ab0ac947547d0ae8f3">00025</link> &#32;&#32;&#32;&#32;uint32_t&#32;<link linkend="_struct_var_int_file_stream_1a97ecce5e0a58b1ab0ac947547d0ae8f3">byte_ptr</link>;
<anchor xml:id="_stream__encoder_8h_source_1l00026"/>00026 
<anchor xml:id="_stream__encoder_8h_source_1l00027"/><link linkend="_struct_var_int_file_stream_1a35cba028c7b885581f278e533cfc4147">00027</link> &#32;&#32;&#32;&#32;uint32_t&#32;<link linkend="_struct_var_int_file_stream_1a35cba028c7b885581f278e533cfc4147">buffer</link>[<link linkend="_stream__encoder_8h_1af7b7dc9a200cb1404c280bd500fd1551">BUFFER_LENGTH</link>];
<anchor xml:id="_stream__encoder_8h_source_1l00028"/><link linkend="_stream__encoder_8h_1a28faaa580490ca2e895b2ebe7bf22707">00028</link> }&#32;<link linkend="_stream__encoder_8h_1a28faaa580490ca2e895b2ebe7bf22707">VIFS</link>;
<anchor xml:id="_stream__encoder_8h_source_1l00029"/>00029 
<anchor xml:id="_stream__encoder_8h_source_1l00030"/>00030 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_stream__encoder_8h_1a0db4a8ab23a4af63c99d5fbfca9073eb">InitializeVarIntStream</link>(<link linkend="_struct_var_int_file_stream">VIFS</link>&#32;*stream,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*file_name,&#32;uint32_t&#32;buffer_size);
<anchor xml:id="_stream__encoder_8h_source_1l00031"/>00031 
<anchor xml:id="_stream__encoder_8h_source_1l00032"/>00032 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_stream__encoder_8h_1a8b42309d51939ee46f5f0d348fbbcbc0">StreamVarInteger</link>(<link linkend="_struct_var_int_file_stream">VIFS</link>&#32;*stream,&#32;uint32_t&#32;data,&#32;uint32_t&#32;length);
<anchor xml:id="_stream__encoder_8h_source_1l00033"/>00033 
<anchor xml:id="_stream__encoder_8h_source_1l00034"/>00034 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_stream__encoder_8h_1afbd717a2dd8bee43593e06a3919ba72a">CloseVarIntegerStream</link>(<link linkend="_struct_var_int_file_stream">VIFS</link>*&#32;stream);
<anchor xml:id="_stream__encoder_8h_source_1l00035"/>00035 
<anchor xml:id="_stream__encoder_8h_source_1l00036"/>00036 
<anchor xml:id="_stream__encoder_8h_source_1l00037"/>00037 
<anchor xml:id="_stream__encoder_8h_source_1l00038"/>00038 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;STREAM_ENCODER_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
