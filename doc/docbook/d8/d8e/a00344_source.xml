<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_a00344_source" xml:lang="en-US">
<title>predictor.c</title>
<indexterm><primary>src/predictor.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_a00344_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_a00137">constants/global_constants.h</link>&quot;</emphasis>
<anchor xml:id="_a00344_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_a00104">predictor/predictor.h</link>&quot;</emphasis>
<anchor xml:id="_a00344_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&lt;time.h&gt;</emphasis>
<anchor xml:id="_a00344_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
<anchor xml:id="_a00344_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_a00134">files/logs.h</link>&quot;</emphasis>
<anchor xml:id="_a00344_source_1l00006"/>00006 
<anchor xml:id="_a00344_source_1l00007"/><link linkend="_a00344_1a75189a35b23b0d484e74e07e0c237cd1">00007</link> <link linkend="_a00122_1aaa4f66633ab727c9d841db141c3da088">file_t</link>&#32;*<link linkend="_a00344_1a75189a35b23b0d484e74e07e0c237cd1">fp</link>;
<anchor xml:id="_a00344_source_1l00008"/><link linkend="_a00146_1a5464533d23b59ba11030432e73528730">00008</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_a00344_1a5464533d23b59ba11030432e73528730">C</link>&#32;=&#32;0;
<anchor xml:id="_a00344_source_1l00009"/>00009 
<anchor xml:id="_a00344_source_1l00010"/><link linkend="_a00344_1a498daa18fb3529e8fffc3fff08e6bef6">00010</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_a00344_1a498daa18fb3529e8fffc3fff08e6bef6">Predict</link>(<link linkend="_a00380">image</link>&#32;*hIMG,&#32;<link linkend="_a00380">image</link>&#32;*result,&#32;<link linkend="_a00152_1affb1df897d26e77d96c613bea67825c6">INDEX</link>&#32;z,&#32;<link linkend="_a00152_1affb1df897d26e77d96c613bea67825c6">INDEX</link>&#32;y,&#32;<link linkend="_a00152_1affb1df897d26e77d96c613bea67825c6">INDEX</link>&#32;x)
<anchor xml:id="_a00344_source_1l00011"/>00011 {
<anchor xml:id="_a00344_source_1l00012"/>00012 
<anchor xml:id="_a00344_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(x&#32;==&#32;0&#32;&amp;&amp;&#32;y&#32;==&#32;0)
<anchor xml:id="_a00344_source_1l00014"/>00014 &#32;&#32;&#32;&#32;{
<anchor xml:id="_a00344_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;free(<link linkend="_a00074_1a8dc01c7173e49a14ae38a59d91b9d669">global_cache</link>-&gt;<link linkend="_a00372_1a8ffc318fbdca60414a190de33e244826">weights</link>);
<anchor xml:id="_a00344_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00095_1adcc753ae7048085817bd2c37b471f739">InitializeWeights</link>(&amp;<link linkend="_a00074_1a8dc01c7173e49a14ae38a59d91b9d669">global_cache</link>-&gt;<link linkend="_a00372_1a8ffc318fbdca60414a190de33e244826">weights</link>,&#32;z,&#32;y,&#32;x);
<anchor xml:id="_a00344_source_1l00017"/>00017 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00344_source_1l00018"/>00018 
<anchor xml:id="_a00344_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<link linkend="_a00149_1a5acabcf9a2b0d843de53680562e2f639">data_t</link>&#32;raw_data&#32;=&#32;<link linkend="_a00113_1a78477801fe183cdf32e60df1c92b7320">GetPixel</link>(hIMG,&#32;x,&#32;y,&#32;z);
<anchor xml:id="_a00344_source_1l00020"/>00020 &#32;&#32;&#32;&#32;uint16_t&#32;local_sum&#32;=&#32;<link linkend="_a00107_1a1f0a6a3443597dab4881bb94fbc35f41">FindLocalSum</link>(hIMG,&#32;z,&#32;y,&#32;x);
<anchor xml:id="_a00344_source_1l00021"/>00021 
<anchor xml:id="_a00344_source_1l00022"/>00022 &#32;&#32;&#32;&#32;int64_t&#32;predicted_central_local_difference&#32;=&#32;<link linkend="_a00101_1a36ddae4ef0f34ba3f7402469253bb6b6">PredictedCentralLocalDifference</link>(hIMG,&#32;z,&#32;y,&#32;x);
<anchor xml:id="_a00344_source_1l00023"/>00023 
<anchor xml:id="_a00344_source_1l00024"/>00024 &#32;&#32;&#32;&#32;int64_t&#32;high_resolution_predicted_sample&#32;=&#32;<link linkend="_a00092_1a441e8d0fe639d45889aab5b88c4138f4">HighResolutionPredictedSample</link>(predicted_central_local_difference,&#32;local_sum);
<anchor xml:id="_a00344_source_1l00025"/>00025 &#32;&#32;&#32;&#32;int32_t&#32;double_resolution_predicted_sample&#32;=&#32;<link linkend="_a00092_1a6c60474c610dc64773816bc445efeb77">DoubleResolutionPredictedSample</link>(hIMG,&#32;z,&#32;y,&#32;x,&#32;high_resolution_predicted_sample);
<anchor xml:id="_a00344_source_1l00026"/>00026 
<anchor xml:id="_a00344_source_1l00027"/>00027 &#32;&#32;&#32;&#32;uint16_t&#32;predicted_sample&#32;=&#32;<link linkend="_a00092_1a14cff7c59ac94b0387e8b95a433521e9">PredictedSample</link>(double_resolution_predicted_sample);
<anchor xml:id="_a00344_source_1l00028"/>00028 &#32;&#32;&#32;&#32;int32_t&#32;quantizer_index&#32;=&#32;<link linkend="_a00098_1afa51bec3d5dfdb41078f60b1a7c454ab">QuantizerIndex</link>(raw_data,&#32;predicted_sample);
<anchor xml:id="_a00344_source_1l00029"/>00029 
<anchor xml:id="_a00344_source_1l00030"/>00030 &#32;&#32;&#32;&#32;uint16_t&#32;clipped_quantizer_bin_center&#32;=&#32;<link linkend="_a00098_1a9d745aa249b8a9cde3f83899b563dcc5">ClippedQuantizerBinCenter</link>(raw_data);
<anchor xml:id="_a00344_source_1l00031"/>00031 &#32;&#32;&#32;&#32;int32_t&#32;double_resolution_predicted_error&#32;=&#32;<link linkend="_a00095_1a286baab1384ff25cf7cf4c2061f15c4c">DoubleResolutionPredictionError</link>(clipped_quantizer_bin_center,
<anchor xml:id="_a00344_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;double_resolution_predicted_sample);
<anchor xml:id="_a00344_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<link linkend="_a00149_1a5acabcf9a2b0d843de53680562e2f639">data_t</link>&#32;predicted_value&#32;=&#32;<link linkend="_a00098_1a1f491e0a435427669942c932394d7c1a">MappedQuantizerIndex</link>(quantizer_index,
<anchor xml:id="_a00344_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;predicted_sample,
<anchor xml:id="_a00344_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;double_resolution_predicted_sample);
<anchor xml:id="_a00344_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<link linkend="_a00113_1aefaa1253ccc17864ac32b9d685b821d4">SetPixel</link>(result,&#32;x,&#32;y,&#32;z,&#32;predicted_value);
<anchor xml:id="_a00344_source_1l00037"/>00037 
<anchor xml:id="_a00344_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<link linkend="_a00095_1a805706f7af2f212bc46076319fcec535">UpdateWeights</link>(hIMG,&#32;<link linkend="_a00074_1a8dc01c7173e49a14ae38a59d91b9d669">global_cache</link>-&gt;<link linkend="_a00372_1a8ffc318fbdca60414a190de33e244826">weights</link>,&#32;z,&#32;y,&#32;x,&#32;double_resolution_predicted_error);
<anchor xml:id="_a00344_source_1l00039"/>00039 
<anchor xml:id="_a00344_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(<link linkend="_a00137_1a1b0cdea94de8d08c0351a24c1e84f547">DEBUG</link>)&#32;{
<anchor xml:id="_a00344_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;write_buffer[1000];
<anchor xml:id="_a00344_source_1l00042"/>00042 
<anchor xml:id="_a00344_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sprintf(write_buffer,&#32;<emphasis role="stringliteral">&quot;(%d,%d,%d),%u,&#32;%d,&#32;%d,&#32;%ld,&#32;%d,&#32;%ld,&#32;[&quot;</emphasis>,
<anchor xml:id="_a00344_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x,&#32;y,&#32;z,&#32;
<anchor xml:id="_a00344_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;raw_data,&#32;predicted_sample,&#32;predicted_value,&#32;
<anchor xml:id="_a00344_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;predicted_central_local_difference,&#32;double_resolution_predicted_sample,&#32;high_resolution_predicted_sample);
<anchor xml:id="_a00344_source_1l00047"/>00047 
<anchor xml:id="_a00344_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;<link linkend="_a00344_1a5464533d23b59ba11030432e73528730">C</link>;&#32;i++)
<anchor xml:id="_a00344_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_a00344_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sprintf(write_buffer&#32;+&#32;strlen(write_buffer),&#32;<emphasis role="stringliteral">&quot;%d,&quot;</emphasis>,&#32;<link linkend="_a00074_1a8dc01c7173e49a14ae38a59d91b9d669">global_cache</link>-&gt;<link linkend="_a00372_1a8ffc318fbdca60414a190de33e244826">weights</link>[i]);
<anchor xml:id="_a00344_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_a00344_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sprintf(write_buffer&#32;+&#32;strlen(write_buffer),&#32;<emphasis role="stringliteral">&quot;]\n&quot;</emphasis>);
<anchor xml:id="_a00344_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00122_1a94d988ea4ce93357f56c0191584246a6">F_WRITE</link>(write_buffer,&#32;<emphasis role="keyword">sizeof</emphasis>(<emphasis role="keywordtype">char</emphasis>),&#32;strlen(write_buffer),&#32;<link linkend="_a00344_1a75189a35b23b0d484e74e07e0c237cd1">fp</link>);
<anchor xml:id="_a00344_source_1l00054"/>00054 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00344_source_1l00055"/>00055 }
<anchor xml:id="_a00344_source_1l00056"/>00056 
<anchor xml:id="_a00344_source_1l00057"/><link linkend="_a00104_1a4a94804509574a94d896a4164802bcd2">00057</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_a00344_1a4a94804509574a94d896a4164802bcd2">RunPredictor</link>(<link linkend="_a00380">image</link>&#32;*hIMG,&#32;<link linkend="_a00380">image</link>&#32;*result)
<anchor xml:id="_a00344_source_1l00058"/>00058 {
<anchor xml:id="_a00344_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;res;
<anchor xml:id="_a00344_source_1l00060"/>00060 
<anchor xml:id="_a00344_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<link linkend="_a00146_1af84e7b9bd8c4fa1203b0040adf941d8d">InitalizeImageConstants</link>(hIMG-&gt;<link linkend="_a00380_1a92c57811a03d78e56a6e8592f96a41ad">size</link>);
<anchor xml:id="_a00344_source_1l00062"/>00062 &#32;&#32;&#32;&#32;res&#32;=&#32;<link linkend="_a00143_1a5d642038360b72b886a5eb66e3efd14a">LoadConstantFile</link>(<link linkend="_a00137_1a7a8fe096cc3b24ddabd9b150f4f5bdd7">PREDICTOR_CONSTANTS_LOCATION</link>,&#32;&amp;<link linkend="_a00137_1a3e84b5148948a9a22f804ac78d16590c">predictor_constants</link>);
<anchor xml:id="_a00344_source_1l00063"/>00063 &#32;&#32;&#32;&#32;<link linkend="_a00146_1a6acd65af9a2f057ad3f0891038799e5b">InitalizePredictorConstants</link>();
<anchor xml:id="_a00344_source_1l00064"/>00064 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;LOG</emphasis>
<anchor xml:id="_a00344_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(res)&#32;{
<anchor xml:id="_a00344_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00134_1ad795690a809192117add6898be812267">Log_error</link>(<emphasis role="stringliteral">&quot;Unable&#32;to&#32;load&#32;Predictor&#32;Constants&quot;</emphasis>);
<anchor xml:id="_a00344_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_a00137_1a938a8c46255e5666f6a434ca0eb87f25a08e594c1afff0b7a6fc5a16b80801215">FILE_READ_ERROR</link>;
<anchor xml:id="_a00344_source_1l00068"/>00068 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00344_source_1l00069"/>00069 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_a00344_source_1l00070"/>00070 &#32;&#32;&#32;&#32;
<anchor xml:id="_a00344_source_1l00071"/>00071 
<anchor xml:id="_a00344_source_1l00072"/>00072 &#32;&#32;&#32;&#32;clock_t&#32;start,&#32;end;
<anchor xml:id="_a00344_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<link linkend="_a00404">dim3</link>&#32;size&#32;=&#32;hIMG-&gt;<link linkend="_a00380_1a92c57811a03d78e56a6e8592f96a41ad">size</link>;
<anchor xml:id="_a00344_source_1l00074"/>00074 
<anchor xml:id="_a00344_source_1l00075"/>00075 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;LOG</emphasis>
<anchor xml:id="_a00344_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<link linkend="_a00344_1a75189a35b23b0d484e74e07e0c237cd1">fp</link>&#32;=&#32;<link linkend="_a00122_1a05d25080a4592a86386f6d0d3d48496c">F_OPEN</link>(<emphasis role="stringliteral">&quot;../data/logs/c-debug.LOG&quot;</emphasis>,&#32;<link linkend="_a00122_1a588666511dde277029c4c5afc30782a6a61aa7ff70b76bff0fda378cf61d6afbc">WRITE</link>);
<anchor xml:id="_a00344_source_1l00077"/>00077 
<anchor xml:id="_a00344_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<link linkend="_a00134_1a61353ebf0328d8bd1f61f224305e64bb">Log_add</link>(<emphasis role="stringliteral">&quot;Setup&#32;Complete.&#32;Running&#32;C&#32;Predictor&quot;</emphasis>);
<anchor xml:id="_a00344_source_1l00079"/>00079 &#32;&#32;&#32;&#32;start&#32;=&#32;clock();
<anchor xml:id="_a00344_source_1l00080"/>00080 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_a00344_source_1l00081"/>00081 
<anchor xml:id="_a00344_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;size.<link linkend="_a00404_1a369004c0d58468e2b5a09c22d6608e1b">z</link>;&#32;i++)
<anchor xml:id="_a00344_source_1l00083"/>00083 &#32;&#32;&#32;&#32;{
<anchor xml:id="_a00344_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!<link linkend="_a00146_1aee5860bd3e62fe2734ce27a1b1038dbc">PREDICTION_MODE</link>){
<anchor xml:id="_a00344_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00344_1a5464533d23b59ba11030432e73528730">C</link>&#32;=&#32;<link linkend="_a00110_1a2fee6f8dd7f3cd3ed1ae75161294c4c4">Ps</link>(i)&#32;+&#32;3;
<anchor xml:id="_a00344_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>{
<anchor xml:id="_a00344_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00344_1a5464533d23b59ba11030432e73528730">C</link>&#32;=&#32;<link linkend="_a00110_1a2fee6f8dd7f3cd3ed1ae75161294c4c4">Ps</link>(i);
<anchor xml:id="_a00344_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_a00344_source_1l00089"/>00089 
<anchor xml:id="_a00344_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;size.<link linkend="_a00404_1a2be1654d9b9e6915687f11ac13ef2f8b">y</link>;&#32;j++)
<anchor xml:id="_a00344_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_a00344_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;k&#32;=&#32;0;&#32;k&#32;&lt;&#32;size.<link linkend="_a00404_1a098d7fd50051a60dd6764a3b94978064">x</link>;&#32;k++)
<anchor xml:id="_a00344_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_a00344_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_a00344_1a498daa18fb3529e8fffc3fff08e6bef6">Predict</link>(hIMG,&#32;result,&#32;i,&#32;j,&#32;k);
<anchor xml:id="_a00344_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_a00344_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_a00344_source_1l00097"/>00097 
<anchor xml:id="_a00344_source_1l00098"/>00098 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#if&#32;LOG</emphasis>
<anchor xml:id="_a00344_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;time_elapsed&#32;=&#32;(double)&#32;(clock()&#32;-&#32;start)&#32;/&#32;(<emphasis role="keywordtype">double</emphasis>)&#32;CLOCKS_PER_SEC;
<anchor xml:id="_a00344_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;time_left&#32;=&#32;time_elapsed&#32;*&#32;(<link linkend="_a00146_1a7a7576e08f5980d322da5f48c7385edc">Nz</link>&#32;-&#32;i&#32;-&#32;1)&#32;/&#32;(i&#32;+&#32;1);
<anchor xml:id="_a00344_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;\rPredicted&#32;%d/%d&#32;of&#32;Image.&#32;(%3.1f&#32;seconds&#32;Elapsed,&#32;%3.1f&#32;seconds&#32;Left)&quot;</emphasis>,&#32;(<emphasis role="keywordtype">int</emphasis>)(i&#32;+&#32;1),&#32;(<emphasis role="keywordtype">int</emphasis>)hIMG-&gt;<link linkend="_a00380_1a92c57811a03d78e56a6e8592f96a41ad">size</link>.<link linkend="_a00404_1a369004c0d58468e2b5a09c22d6608e1b">z</link>,&#32;time_elapsed,&#32;time_left);
<anchor xml:id="_a00344_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fflush(stdout);
<anchor xml:id="_a00344_source_1l00103"/>00103 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_a00344_source_1l00104"/>00104 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00344_source_1l00105"/>00105 
<anchor xml:id="_a00344_source_1l00106"/>00106 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#if&#32;LOG</emphasis>
<anchor xml:id="_a00344_source_1l00107"/>00107 &#32;&#32;&#32;&#32;<link linkend="_a00122_1ad62e6a72675aa7b389460e97f4e6d998">F_CLOSE</link>(<link linkend="_a00344_1a75189a35b23b0d484e74e07e0c237cd1">fp</link>);
<anchor xml:id="_a00344_source_1l00108"/>00108 
<anchor xml:id="_a00344_source_1l00109"/>00109 &#32;&#32;&#32;&#32;end&#32;=&#32;clock();
<anchor xml:id="_a00344_source_1l00110"/>00110 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;time_elapsed&#32;=&#32;(double)&#32;(end&#32;-&#32;start)&#32;/&#32;(double)&#32;CLOCKS_PER_SEC;
<anchor xml:id="_a00344_source_1l00111"/>00111 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;\n%3.3f&#32;seconds&#32;for&#32;image&#32;prediction.\n&quot;</emphasis>,&#32;time_elapsed);
<anchor xml:id="_a00344_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_a00344_source_1l00113"/>00113 
<anchor xml:id="_a00344_source_1l00114"/>00114 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;out_buff[100];
<anchor xml:id="_a00344_source_1l00115"/>00115 &#32;&#32;&#32;&#32;sprintf(out_buff,&#32;<emphasis role="stringliteral">&quot;Time&#32;taken&#32;for&#32;prediction:&#32;%3.3f&#32;seconds&quot;</emphasis>,&#32;time_elapsed);
<anchor xml:id="_a00344_source_1l00116"/>00116 
<anchor xml:id="_a00344_source_1l00117"/>00117 &#32;&#32;&#32;&#32;<link linkend="_a00134_1a61353ebf0328d8bd1f61f224305e64bb">Log_add</link>(out_buff);
<anchor xml:id="_a00344_source_1l00118"/>00118 &#32;&#32;&#32;&#32;<link linkend="_a00134_1a61353ebf0328d8bd1f61f224305e64bb">Log_add</link>(<emphasis role="stringliteral">&quot;Prediction&#32;Complete&quot;</emphasis>);
<anchor xml:id="_a00344_source_1l00119"/>00119 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#endif</emphasis>
<anchor xml:id="_a00344_source_1l00120"/>00120 
<anchor xml:id="_a00344_source_1l00121"/>00121 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_a00137_1a938a8c46255e5666f6a434ca0eb87f25a2ea4b6ef3fffc17dd1d38ab5c2837737">RES_OK</link>;
<anchor xml:id="_a00344_source_1l00122"/>00122 }
</programlisting></section>
